{"version":3,"sources":["components/PagedListNavigation/PagedListNavigation.component.tsx","components/PagedListNavigation/PagedListNavigation.module.scss","components/AddressView/AddressMutation/AddressMutation.module.scss","components/AddressView/AddressMetaInfo/AddressMetaInfo.module.scss","components/AddressView/AddressView.module.scss","components/AddressView/AddressMutation/AddressMutation.component.tsx","components/AddressView/AddressMetaInfo/AddressMetaInfo.component.tsx","components/AddressView/AddressView.component.tsx","context/CoinInfo.context.ts","utils/getBaseUrl.util.ts","utils/getCoinInfo.util.ts","components/Section/Section.component.tsx","components/Section/Section.module.scss","components/Cell/Cell.component.tsx","components/Banner/FreshGRLCBanner/FreshGRLCBanner.module.scss","components/Banner/CoinSelector/CoinSelector.module.scss","components/Banner/SearchBar/SearchBar.module.scss","components/Banner/FreshGRLCBanner/FreshGRLCBanner.component.tsx","components/Banner/CoinSelector/CoinSelector.component.tsx","components/Banner/SearchBar/SearchBar.component.tsx","components/Banner/Banner.component.tsx","utils/formatNumericalValue.util.tsx","components/PageLoadAnimation/PageLoadAnimation.component.tsx","components/PageLoadAnimation/PageLoadAnimation.module.scss","assets/loading_large.svg","utils/padNumber.util.ts","utils/formatTime.util.ts","assets/loading.gif","components/Cell/Cell.module.scss","components/Row/Row.component.tsx","components/Row/Row.module.scss"],"names":["PagedListNavigation","baseUrl","currentOffset","offsetParamName","entriesPerPage","reachedEndOfList","labelBackward","labelForward","makeLink","backwards","newOffset","linkBackward","linkForward","className","classes","navigation","to","separator","module","exports","AddressMutation","mutation","first","highlight","coinInfo","useContext","CoinInfoContext","highlighted","label","undefined","largelabel","data","formatTime","time","notMono","cellStyle","size","transaction","txid","link","ticker","linkColor","change","unit","displaySymbol","alwaysSingular","decimals","align","textColor","confirmed","dataNotImportant","AddressTypeDescriptions","p2pkh_true","p2pkh_false","p2wpkh_true","p2wpkh_false","p2sh_false","p2wsh_false","AddressMetaInfo","address","addressType","hasAliases","aliases","length","table","cells","toString","balance","pending","filter","e","map","row","forEach","cell","addressMetaInfo","header","entry","index","key","wide","labelWidth","AddressView","routeParams","queryParams","getBaseUrl","coin","getCoinInfo","mutationsOffset","parseInt","useFetch","isLoading","error","mutationsLoading","mutations","useState","setAddressType","useEffect","mutationType","fetch","then","result","json","myOutput","Object","values","outputs","output","type","myInput","inputs","input","console","log","push","Provider","value","coins","getAllCoins","preferredCoin","transactionView","wrapper","createContext","Coins","name","displayName","blockTime","blockReward","logo","Section","children","pagesection","sectionheader","Cell","externalLink","maxDecimals","wrapInLink","contents","accentuatedLink","href","target","rel","style","processInnerCellStyle","processCellStyle","innerCell","sunken","sunkenData","backgroundColor","padding","borderRadius","width","height","marginRight","marginLeft","color","fontSize","normal","smaller","small","hasData","formattedData","formatNumericalValue","decimalClass","unitClass","sunkenLabel","info","processOuterCellStyle","mono","dimmedValue","join","loading","src","alt","FreshGRLCBanner","title","subdomain","subtitle","subtext","banner","makeCoinsUrl","CoinSelector","coinSelector","Fragment","selectableCoin","SearchBar","searchFieldValue","updateSearchField","searchObject","setSearchObject","setLoading","isError","setError","searchResults","setSearchResults","selectedObject","setSelectedObject","redirectUrl","redirectTo","Promise","all","a","results","network","filtered","hasOwnProperty","block","hash","Form","searchbar","onSubmit","trim","Input","placeholder","onChange","Banner","selectableCoins","rounded","number","negative","absolute","Math","abs","valueOf","integer","floor","decimalpart","roundTo","roundedDecimals","toFixed","substring","replace","options","roundedData","isExactlyOne","formatDecimal","Number","PageLoadAnimation","pageLoad","inner","padNumber","num","padStart","timestamp","alwaysIncludeDate","includeDate","Date","now","date","zone","toLocaleTimeString","timeZoneName","split","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","formatTimeDiff","timestamp1","timestamp2","useSeconds","timeDiff","round","formatTimeDiffToString","unformatted","Row","labelSubText","labelSubTextLink","extrawide","hasCellLabels","verticalExtraPaddedRow","verticalPaddedRow","verticalPaddedLabel","wideRowLabel","getLabelStyle"],"mappings":"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","file":"static/js/7.7df8d493.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './PagedListNavigation.module.scss';\n\ninterface IProps {\n    baseUrl: string;\n    currentOffset: number;\n    offsetParamName?: string;\n    entriesPerPage: number;\n    reachedEndOfList?: boolean;\n    labelBackward: string;\n    labelForward: string;\n}\n\nexport const PagedListNavigation: React.FC<IProps> = ({ baseUrl, currentOffset, offsetParamName, entriesPerPage, reachedEndOfList, labelBackward, labelForward }) => {\n    if (!offsetParamName) {\n        offsetParamName = 'offset'\n    }\n\n    const makeLink = (backwards: boolean): string | undefined => {\n        var newOffset = currentOffset + (backwards ? -entriesPerPage : entriesPerPage);\n        if (newOffset < 0) {\n            if (currentOffset === 0) {\n                return undefined;\n            }\n            newOffset = 0;\n        }\n        if (!backwards && reachedEndOfList) {\n            return undefined;\n        }\n\n        return `${baseUrl}?${offsetParamName}=${newOffset}`;\n    };\n\n    const linkBackward = makeLink(true);\n    const linkForward = makeLink(false);\n\n    return (\n        <div className={classes.navigation}>\n            {linkBackward ? (\n                <Link to={linkBackward} className={classes.backwards}>{labelBackward}</Link>\n            ) : labelBackward}\n            <div className={classes.separator}>·</div>\n            {linkForward ? (\n                <Link to={linkForward}>{labelForward}</Link>\n            ) : labelForward}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"PagedListNavigation_navigation__245iZ\",\"separator\":\"PagedListNavigation_separator__16_yn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mutation\":\"AddressMutation_mutation__1gW-J\",\"highlighted\":\"AddressMutation_highlighted__ls9nQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addressMetaInfo\":\"AddressMetaInfo_addressMetaInfo__3Jl1N\",\"header\":\"AddressMetaInfo_header__14rrG\",\"address\":\"AddressMetaInfo_address__1wuQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddressView_wrapper__fENhw\",\"mutations\":\"AddressView_mutations__1Wo3F\"};","import React, { useContext } from 'react';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IMutation } from 'interfaces/IMutation.interface';\n\nimport { Cell } from 'components/Cell/Cell.component';\n\nimport { formatTime } from 'utils/formatTime.util';\n\nimport classes from './AddressMutation.module.scss';\n\ninterface IProps {\n    mutation: IMutation;\n    first?: boolean;\n    highlight?: boolean;\n}\n\nexport const AddressMutation: React.FC<IProps> = ({ mutation, first, highlight }) => {\n    const coinInfo = useContext(CoinInfoContext);\n\n    return (\n        <div className={classes.mutation + (highlight ? ' ' + classes.highlighted : '')}>\n            <Cell\n                label={first ? 'Time' : undefined}\n                largelabel={true}\n                data={formatTime(mutation.time, true)}\n                notMono={true}\n                cellStyle={{\n                    size: '200px'\n                }}\n            />\n            <Cell\n                label={first ? 'Transaction' : undefined}\n                largelabel={true}\n                data={mutation.transaction.txid}\n                link={`/${coinInfo.ticker}/transactions/${mutation.transaction.txid}`}\n                cellStyle={{\n                    size: '580px',\n                    linkColor: 'normal'\n                }}\n            />\n            <Cell\n                label={first ? 'Mutation' : undefined}\n                largelabel={true}\n                data={mutation.change}\n                unit={coinInfo ? coinInfo.displaySymbol : ''}\n                alwaysSingular={true}\n                decimals={8}\n                cellStyle={{\n                    align: 'right',\n                    size: '140px',\n                    textColor: mutation.change < 0.0 ? '#e83737' : '#1bb11b'\n                }}\n            />\n            <Cell\n                label={first ? 'Confirmed' : undefined}\n                largelabel={true}\n                data={mutation.confirmed ? '✓' : 'Pending...'}\n                notMono={true}\n                cellStyle={{\n                    size: '80px',\n                    dataNotImportant: !mutation.confirmed,\n                    textColor: mutation.confirmed ? '#1bb11b' : undefined\n                }}\n            />\n        </div>\n    );\n};\n","import React, { useContext } from 'react';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IAddressInfo } from 'interfaces/IAddressInfo.interface';\nimport { IRow } from 'interfaces/IRow.interface';\nimport { ICell, ICellStyle } from 'interfaces/ICell.interface';\nimport { TransactionOutputType } from 'interfaces/ITransaction.interface';\n\nimport { Row } from 'components/Row/Row.component';\n\n\nimport classes from './AddressMetaInfo.module.scss';\n\ninterface IProps {\n    address: IAddressInfo;\n    addressType?: TransactionOutputType\n}\n\nconst AddressTypeDescriptions: { [key: string]: string } = {\n    p2pkh_true: 'Pay to Public Key Hash (p2pkh)',\n    p2pkh_false: 'Pay to Public Key Hash (p2pkh)',\n    p2wpkh_true: 'Pay to Public Key Hash (p2pkh)',\n    p2wpkh_false: 'Pay to Witness Public Key Hash, native SegWit only (p2wpkh)',\n    p2sh_false: 'Pay to Script Hash (p2sh)',\n    p2wsh_false: 'Pay to Witness Script Hash, native SegWit only (p2wsh)',\n};\n\n\nexport const AddressMetaInfo: React.FC<IProps> = ({ address, addressType }) => {\n    const coinInfo = useContext(CoinInfoContext);\n\n    const hasAliases = address.aliases != null && address.aliases.length > 0;\n    const table: IRow[] = ([\n        {\n            label: 'Address type',\n            cells: [\n                {\n                    data: addressType ? AddressTypeDescriptions[addressType + '_' + hasAliases.toString()] : undefined,\n                    notMono: true\n                },\n            ],\n        },\n        {\n            label: hasAliases ? 'SegWit Base-58 Alias' : undefined,\n            cells: [\n                {\n                    data: hasAliases ? address.aliases[0] : 'n/a'\n                },\n            ],\n        },\n        {\n            label: hasAliases ? 'SegWit Bech-32 Alias' : undefined,\n            cells: [\n                {\n                    data: hasAliases ? address.aliases[1] : 'n/a'\n                },\n            ],\n        },\n        {\n            label: 'Balance',\n            cells: [\n                {\n                    data: address.balance,\n                    unit: coinInfo ? coinInfo.displaySymbol : '',\n                    alwaysSingular: true,\n                    decimals: 8\n                },\n            ],\n        },\n        {\n            label: 'Pending',\n            cells: address.pending !== 0.0 ? [\n                {\n                    data: address.pending,\n                    unit: coinInfo ? coinInfo.displaySymbol : '',\n                    alwaysSingular: true,\n                    decimals: 8\n                },\n            ] : [\n                {\n                    data: '-'\n                },\n            ],\n        }\n    ] as IRow[]).filter(e => e.label !== undefined).map(\n        (row: IRow): IRow => {\n            row.cells.forEach((cell: ICell) => {\n                if (cell.cellStyle === undefined) {\n                    cell.cellStyle = {} as ICellStyle;\n                }\n                cell.cellStyle.align = 'left';\n            });\n            return row;\n        }\n    );\n\n    return (\n        <div className={classes.addressMetaInfo}>\n            <h3 className={classes.header}>\n                Address <span className={classes.address}>{address.address}</span>\n            </h3>\n            {table.map((entry, index) => (\n                <Row key={index} wide={true} labelWidth=\"200px\" {...entry} />\n            ))}\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport useFetch from 'react-fetch-hook';\n\nimport { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\nimport { getCoinInfo, getAllCoins } from 'utils/getCoinInfo.util';\nimport { Redirect } from 'react-router';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IAddressInfo } from 'interfaces/IAddressInfo.interface';\nimport { IMutation } from 'interfaces/IMutation.interface';\nimport { ITransaction, ITransactionInput, ITransactionOutput, TransactionOutputType } from 'interfaces/ITransaction.interface';\n\nimport { Banner } from 'components/Banner/Banner.component';\nimport { Section } from 'components/Section/Section.component';\nimport { PagedListNavigation } from 'components/PagedListNavigation/PagedListNavigation.component';\nimport { PageLoadAnimation } from 'components/PageLoadAnimation/PageLoadAnimation.component';\n\nimport { AddressMutation } from './AddressMutation/AddressMutation.component';\nimport { AddressMetaInfo } from './AddressMetaInfo/AddressMetaInfo.component';\n\nimport classes from './AddressView.module.scss';\n\ninterface IProps {\n    routeParams: { coin: CoinTickerSymbol; address: string };\n    queryParams: { mutationsOffset?: string };\n}\n\nexport const AddressView: React.FC<IProps> = ({ routeParams, queryParams }) => {\n    const baseUrl = getBaseUrl(routeParams.coin);\n    const coinInfo = getCoinInfo(routeParams.coin);\n\n    const mutationsOffset = queryParams && queryParams.mutationsOffset ? parseInt(queryParams.mutationsOffset) : 0;\n\n    const { isLoading, data: address, error } = useFetch<IAddressInfo>(\n        `${baseUrl}/address/${routeParams.address}/`\n    );\n    const { isLoading: mutationsLoading, data: mutations } = useFetch<IMutation[]>(\n        `${baseUrl}/address/${routeParams.address}/mutations/?start=${mutationsOffset}&limit=40`\n    );\n\n    const [addressType, setAddressType] = useState<TransactionOutputType | undefined>();\n    useEffect(() => {\n        if (!mutations || mutations.length === 0) {\n            setAddressType(undefined);\n        } else {\n            const mutationType = mutations[0].change < 0.0 ? 'input' : 'output';\n            fetch(`${getBaseUrl(coinInfo.ticker)}/transactions/${mutations[0].transaction.txid}/?expand=${mutationType}s`)\n                .then(result => result.json())\n                .then(result => {\n                    const transaction: ITransaction = result;\n                    if (mutationType === 'output') {\n                        const myOutput = (Object.values(transaction.outputs) as ITransactionOutput[]).filter((output) => output.address === routeParams.address);\n                        if (myOutput.length > 0) {\n                            setAddressType(myOutput[0].type);\n                        }\n                    } else {\n                        const myInput = (Object.values(transaction.inputs) as ITransactionInput[]).filter((input) => input.address === routeParams.address);\n                        if (myInput.length > 0) {\n                            setAddressType(myInput[0].type);\n                        }\n                    }\n                });\n        }\n    }, [mutationsLoading, mutations, coinInfo, routeParams]);\n\n    if (error != null) {\n        console.log(error);\n        return <Redirect to=\"/error404\" push={false} />;\n    }\n\n    return (\n        <CoinInfoContext.Provider value={coinInfo}>\n            <Banner coins={getAllCoins()} preferredCoin={coinInfo ? coinInfo.ticker : undefined} />\n            {!isLoading && address != null ? (\n                <div className={classes.transactionView}>\n                    <Section>\n                        <AddressMetaInfo address={address} addressType={addressType} />\n                    </Section>\n                    <Section header=\"Recent transactions\">\n                    { !mutationsLoading && mutations != null ? (\n                        <>\n                            <PagedListNavigation\n                                baseUrl={`/${coinInfo.ticker}/address/${address.address}`}\n                                currentOffset={mutationsOffset}\n                                offsetParamName=\"mutationsOffset\"\n                                entriesPerPage={40}\n                                reachedEndOfList={mutations.length < 40}\n                                labelForward=\"Older ⇾\"\n                                labelBackward=\"⇽ Newer\"\n                            />\n                            <div className={classes.wrapper}>\n                                <div className={classes.mutations}>\n                                    {mutations.map((mutation, index) => (\n                                        <AddressMutation key={index} mutation={mutation} first={index === 0} highlight={index % 2 === 1} />\n                                    ))}\n                                </div>\n                            </div>\n                            <PagedListNavigation\n                                baseUrl={`/${coinInfo.ticker}/address/${address.address}`}\n                                currentOffset={mutationsOffset}\n                                offsetParamName=\"mutationsOffset\"\n                                entriesPerPage={40}\n                                reachedEndOfList={mutations.length < 40}\n                                labelForward=\"Older ⇾\"\n                                labelBackward=\"⇽ Newer\"\n                            />\n                        </>\n                    ) : (\n                        <PageLoadAnimation />\n                    )}\n                    </Section>\n                </div>\n            ) : (\n                <PageLoadAnimation />\n            )}\n        </CoinInfoContext.Provider>\n    );\n};\n","import { createContext } from 'react';\n\nimport { ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nexport const CoinInfoContext = createContext<ICoinInfo>(null!);\n","import { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nexport const getBaseUrl = (ticker: CoinTickerSymbol) => `https://api.freshgrlc.net/blockchain/${ticker}`;\n","import { CoinTickerSymbol, ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nconst Coins: ICoinInfo[] = [\n    {\n        ticker: 'grlc',\n        name: 'garlicoin',\n        displayName: 'Garlicoin',\n        displaySymbol: 'GRLC',\n        blockTime: 40,\n        blockReward: 25,\n        logo: 'garlicoin.svg',\n    },\n    {\n        ticker: 'tux',\n        name: 'tuxcoin',\n        displayName: 'Tuxcoin',\n        displaySymbol: 'TUX',\n        blockTime: 60,\n        blockReward: 33.5,\n        logo: 'tuxcoin.svg',\n    },\n    {\n        ticker: 'tgrlc',\n        name: 'garlicoin-testnet',\n        displayName: 'Garlicoin testnet',\n        displaySymbol: 'tGRLC',\n        blockTime: 40,\n        blockReward: 50,\n        logo: 'garlicoin.svg',\n    },\n];\n\nexport const getCoinInfo = (ticker: CoinTickerSymbol): ICoinInfo => {\n    return Coins.filter((coin) => coin.ticker === ticker)[0];\n};\n\nexport const getAllCoins = () => Coins;\n","import React from 'react';\n\nimport classes from './Section.module.scss';\n\ninterface IProps {\n    children?: any;\n    header?: string;\n}\n\nexport const Section: React.FC<IProps> = ({ children, header }) => {\n    return (\n        <div className={classes.pagesection}>\n            {header ? <h2 className={classes.sectionheader}>{header}</h2> : null}\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesection\":\"Section_pagesection__NIoLc\",\"sectionheader\":\"Section_sectionheader__1msZN\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport loading from 'assets/loading.gif';\n\nimport { ICell, ICellStyle } from 'interfaces/ICell.interface';\n\nimport { formatNumericalValue } from 'utils/formatNumericalValue.util';\n\nimport classes from './Cell.module.scss';\n\nexport const Cell: React.FC<ICell> = ({\n    label,\n    largelabel,\n    data,\n    link,\n    externalLink,\n    unit,\n    notMono,\n    decimals,\n    maxDecimals,\n    alwaysSingular,\n    cellStyle,\n}) => {\n    const wrapInLink = (contents: JSX.Element, cellStyle?: ICellStyle) => {\n        let className = classes.link + (cellStyle && cellStyle.linkColor !== 'normal' ? ' ' + classes.accentuatedLink : '');\n        return link ? (\n            externalLink ? (\n                <a\n                    className={className}\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={processInnerCellStyle(cellStyle)}\n                >\n                    {contents}\n                </a>\n            ) : (\n                <Link className={className} to={link} style={processInnerCellStyle(cellStyle)}>\n                    {contents}\n                </Link>\n            )\n        ) : (\n            <div style={processInnerCellStyle(cellStyle)}>{contents}</div>\n        );\n    };\n\n    const processCellStyle = (innerCell: boolean, cellStyle?: ICellStyle): React.CSSProperties | undefined => {\n        var style: React.CSSProperties = {};\n\n        if (!cellStyle) {\n            return undefined;\n        }\n\n        if (cellStyle.sunken || cellStyle.sunkenData) {\n            if (innerCell) {\n                style.backgroundColor = '#34322e';\n                style.padding = '4px';\n                style.borderRadius = '10px';\n                style.width = '90%';\n            } else {\n                style.height = '28px';\n            }\n        }\n\n        if (innerCell && cellStyle.align) {\n            if (cellStyle.align === 'left') {\n                style.marginRight = 'auto';\n            } else if (cellStyle.align === 'right') {\n                style.marginLeft = 'auto';\n            }\n        }\n\n        if (innerCell && cellStyle.textColor) {\n            style.color = cellStyle.textColor;\n        }\n\n        if (!innerCell && cellStyle.size) {\n            style.width = cellStyle.size;\n        }\n\n        if (!innerCell && cellStyle.fontSize) {\n            style.fontSize = {\n                normal: undefined,\n                smaller: '90%',\n                small: '85%',\n            }[cellStyle.fontSize];\n        }\n\n        return style;\n    };\n\n    const processOuterCellStyle = (cellStyle?: ICellStyle): React.CSSProperties | undefined =>\n        processCellStyle(false, cellStyle);\n    const processInnerCellStyle = (cellStyle?: ICellStyle): React.CSSProperties | undefined =>\n        processCellStyle(true, cellStyle);\n\n    const hasData = data !== null && data !== undefined;\n    const formattedData = hasData\n        ? formatNumericalValue(data as (string | number), {\n              decimals,\n              maxDecimals,\n              unit,\n              alwaysSingular,\n              decimalClass: classes.decimals,\n              unitClass: classes.unit\n          })\n        : undefined;\n\n    return (\n        <div className={`${classes.cell} ${cellStyle && cellStyle.color ? classes[cellStyle.color + 'Cell'] : ''}`}>\n            {label ? <h4 className={classes.label + (largelabel ? ' ' + classes.largelabel : '') + (cellStyle && cellStyle.sunken ? ' ' + classes.sunkenLabel : '')}>{label}</h4> : null}\n            <div className={classes.info} style={processOuterCellStyle(cellStyle)}>\n                {hasData ? (\n                    wrapInLink(<div\n                        className={[\n                            notMono ? undefined : classes.mono,\n                            cellStyle && cellStyle.dataNotImportant ? classes.dimmedValue : undefined\n                        ].filter(e => e !== undefined).join(' ')}\n                    >{formattedData}</div>, cellStyle)\n                ) : (\n                    wrapInLink(<img className={classes.loading} src={loading} alt=\"Loading\" />, cellStyle)\n                )}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"FreshGRLCBanner_banner__GV84b\",\"subdomain\":\"FreshGRLCBanner_subdomain__PJy6_\",\"subtext\":\"FreshGRLCBanner_subtext___Qo5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coinSelector\":\"CoinSelector_coinSelector__2igoQ\",\"separator\":\"CoinSelector_separator__3R6Lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__SqBc-\"};","import React from 'react';\n\nimport classes from './FreshGRLCBanner.module.scss';\n\n\ninterface IProps {\n    title?: string,\n    subdomain?: string,\n    subtitle?: string,\n    subtext?: string | JSX.Element\n}\n\nexport const FreshGRLCBanner: React.FC<IProps> = function({ title, subdomain, subtitle, subtext }) {\n    title = title ? title : 'FreshGRLC.NET';\n    return (\n        <div className={classes.banner}>\n            <h1>{ subdomain ? (<span className={classes.subdomain}>{subdomain}.</span>) : ''}{title}</h1>\n            { subtitle ? (<h2>{subtitle}</h2>) : undefined}\n            { subtext ? (<div className={classes.subtext}>{subtext}</div>) : undefined}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport classes from './CoinSelector.module.scss';\n\ninterface ICombinedCoins {\n    name: string;\n    coins: CoinTickerSymbol[];\n};\n\nexport type SingleOrCombinedCoin = ICoinInfo | ICombinedCoins;\n\ninterface IProps {\n    coins: SingleOrCombinedCoin[];\n}\n\nconst makeCoinsUrl = (coin: ICoinInfo | ICombinedCoins): string => {\n    const combinedCoins = coin as ICombinedCoins;\n    if (combinedCoins !== undefined && combinedCoins.coins !== undefined) {\n        const combinedCoins = coin as ICombinedCoins;\n        return combinedCoins.coins.join('+');\n    }\n    return (coin as ICoinInfo).ticker;\n};\n\nexport const CoinSelector: React.FC<IProps> = function({ coins }) {\n    return (\n        <div className={classes.coinSelector}>\n            Show information for:\n            {\n                coins.map((coin, index) => (\n                    <React.Fragment key={index}>\n                        {index ? (<span className={classes.separator}>{'\\u25CF'}</span>) : ''}\n                        <a className={classes.selectableCoin} href={`/${makeCoinsUrl(coin)}/home/`}>{coin.name}</a>\n                    </React.Fragment>\n                ))\n            }\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form } from 'semantic-ui-react';\n\nimport { IAddressInfo } from 'interfaces/IAddressInfo.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IBlockTransaction } from 'interfaces/ITransaction.interface';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\n\nimport classes from './SearchBar.module.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\ntype ISearchResult = IBlock | IBlockTransaction | IAddressInfo | null;\n\ninterface ISearchResultWithContext {\n    result: ISearchResult;\n    network: CoinTickerSymbol;\n}\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const SearchBar: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const [searchFieldValue, updateSearchField] = useState<string>('');\n    const [searchObject, setSearchObject] = useState<string>('');\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [isError, setError] = useState<boolean>(false);\n    const [searchResults, setSearchResults] = useState<ISearchResultWithContext[] | undefined>(undefined);\n    const [selectedObject, setSelectedObject] = useState<ISearchResultWithContext | undefined>(undefined);\n    const [redirectUrl, redirectTo] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        setError(false);\n    }, [searchFieldValue]);\n\n    useEffect(() => {\n        if (searchObject === '') {\n            setLoading(false);\n            return;\n        }\n\n        setLoading(true);\n        Promise.all(\n            coins.map(\n                async (coin) =>\n                    (await fetch(`${getBaseUrl(coin.ticker)}/search/${searchObject}`)).json() as Promise<ISearchResult>\n            )\n        )\n            .then((results) =>\n                results\n                    .map((result, index) => {\n                        return {\n                            result: result,\n                            network: coins[index].ticker,\n                        };\n                    })\n                    .filter((result) => result.result !== null)\n            )\n            .then(setSearchResults);\n    }, [coins, searchObject]);\n\n    useEffect(() => {\n        setLoading(false);\n        if (searchResults === undefined) return;\n\n        if (searchResults.length === 0) {\n            setError(true);\n            return;\n        }\n\n        if (searchResults.length > 1 && preferredCoin !== undefined) {\n            const filtered = searchResults.filter((result) => result.network === preferredCoin);\n            if (filtered.length > 0) {\n                setSelectedObject(filtered[0]);\n                return;\n            }\n        }\n\n        setSelectedObject(searchResults[0]);\n    }, [searchResults, preferredCoin]);\n\n    useEffect(() => {\n        if (selectedObject === undefined || selectedObject.result === null) return;\n\n        if (selectedObject.result.hasOwnProperty('txid')) {\n            const transaction = selectedObject.result as IBlockTransaction;\n            redirectTo(`/${selectedObject.network}/transactions/${transaction.txid}`);\n        } else if (selectedObject.result.hasOwnProperty('hash')) {\n            const block = selectedObject.result as IBlock;\n            redirectTo(`/${selectedObject.network}/blocks/${block.hash}`);\n        } else {\n            const address = selectedObject.result as IAddressInfo;\n            redirectTo(`/${selectedObject.network}/address/${address.address}`);\n        }\n    }, [selectedObject]);\n\n    /* FIXME */\n    return redirectUrl === undefined ? (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    ) : (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Redirect push to={redirectUrl} />\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { FreshGRLCBanner } from './FreshGRLCBanner/FreshGRLCBanner.component';\nimport { CoinSelector, SingleOrCombinedCoin } from './CoinSelector/CoinSelector.component';\nimport { SearchBar } from './SearchBar/SearchBar.component';\n\nimport { getCoinInfo } from 'utils/getCoinInfo.util';\n\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const Banner: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const selectableCoins: SingleOrCombinedCoin[] = [\n        getCoinInfo('grlc'),\n        getCoinInfo('tux'),\n        { name: '(both)', coins: ['grlc', 'tux'] },\n        getCoinInfo('tgrlc')\n    ];\n    return (\n        <FreshGRLCBanner subdomain=\"explorer\" subtitle=\"Multi-Blockchain Explorer\" subtext={(\n            <>\n                <CoinSelector coins={selectableCoins} />\n                <SearchBar coins={coins} preferredCoin={preferredCoin} />\n            </>\n        )}/>\n    );\n};\n","import React from 'react';\n\nexport const rounded = (number: number, decimals?: number, maxDecimals: number = 8): [number | string, string | undefined] => {\n    const negative = number < 0;\n    const absolute = Math.abs(number.valueOf());\n    const integer = Math.floor(absolute);\n    const decimalpart = absolute - integer;\n    const roundTo = decimals !== undefined ? decimals : decimalpart.toString().length > 2 + maxDecimals ? maxDecimals : undefined;\n    const roundedDecimals = (\n        roundTo !== undefined ? decimalpart.toFixed(roundTo) : decimalpart.toString()\n    ).substring(2, 2 + maxDecimals);\n\n    return [\n        negative ? integer === 0 ? '-0' : -integer : integer,\n        roundedDecimals !== '' ? (\n            decimals !== undefined ? roundedDecimals : roundedDecimals.replace(/0+$/, '')\n        ) : undefined\n    ];\n};\n\nexport const formatDecimal = (integer: number | string, decimalClass?: string, roundedDecimals?: string): JSX.Element => {\n    return (\n        <>\n            {integer}\n            {roundedDecimals ? <span className={decimalClass}>.{roundedDecimals}</span> : null}\n        </>\n    );\n};\n\ninterface INumericalValueOptions {\n    decimals?: number;\n    maxDecimals?: number;\n    unit?: string;\n    alwaysSingular?: boolean;\n    decimalClass?: string;\n    unitClass?: string;\n    dimValue?: boolean;\n}\n\nexport const formatNumericalValue = (value: number | string, options: INumericalValueOptions) => {\n    const { decimals, maxDecimals, unit, alwaysSingular, decimalClass, unitClass } = options;\n\n    let roundedData: [number | string, string | undefined] | undefined;\n    let formattedData: JSX.Element | string | undefined;\n    let isExactlyOne: boolean = false;\n\n    if (typeof value === 'number') {\n        roundedData = rounded(value, decimals, maxDecimals);\n        formattedData = formatDecimal(roundedData[0], decimalClass, roundedData[1]);\n    } else {\n        roundedData = rounded(Number(value), decimals, maxDecimals);\n        formattedData = value;\n    }\n    isExactlyOne = roundedData[0] in [-1, 1];\n\n    return (\n        <>\n            {formattedData}\n            {unit ? (\n                <div className={unitClass}>\n                    {' '}\n                    {unit}\n                    {isExactlyOne || alwaysSingular ? '' : 's'}\n                </div>\n            ) : null}\n        </>\n    );\n};\n","import React from 'react';\n\nimport classes from './PageLoadAnimation.module.scss';\n\nimport loading from 'assets/loading_large.svg';\n\nexport const PageLoadAnimation: React.FC = () => {\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.pageLoad}>\n                <div className={classes.inner}>\n                    <img src={loading} alt=\"\" />\n                    <h3>Loading...</h3>\n                </div>\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageLoadAnimation_wrapper__3xAcH\",\"pageLoad\":\"PageLoadAnimation_pageLoad__3wwZ4\",\"inner\":\"PageLoadAnimation_inner__1QFe0\"};","module.exports = __webpack_public_path__ + \"static/media/loading_large.346688c2.svg\";","export const padNumber = (num: number): string => {\n    return num.toString().padStart(2, '0');\n};\n","import { padNumber } from './padNumber.util';\n\nexport const formatTime = (timestamp: number | null | undefined, alwaysIncludeDate?: boolean): string => {\n    if (timestamp === null || timestamp === undefined) {\n        return 'Unknown';\n    }\n\n    const includeDate: boolean = alwaysIncludeDate || Date.now() / 1000 - timestamp > 86400;\n    const date = new Date(timestamp * 1000);\n    const zone = new Date().toLocaleTimeString('en-us', { timeZoneName: 'short' }).split(' ')[2];\n\n    /* FIXME: Detect browsers for people that don't get how calenders work */\n    return (\n        (includeDate\n            ? `${padNumber(date.getDate())}-${padNumber(date.getMonth() + 1)}-${padNumber(date.getFullYear())} `\n            : '') +\n        `${padNumber(date.getHours())}:${padNumber(date.getMinutes())}:${padNumber(date.getSeconds())} ${zone}`\n    );\n};\n\nexport const formatTimeDiff = (timestamp1?: number, timestamp2?: number, useSeconds?: boolean): [number | string, string | undefined] => {\n    if (timestamp1 === undefined || timestamp1 === null || timestamp2 === undefined) {\n        return ['Unknown', undefined];\n    }\n\n    const timeDiff = timestamp2 - timestamp1;\n\n    if (timeDiff < 60) {\n        return useSeconds ? [timeDiff, 'second'] : ['<1', 'minute'];\n    }\n    if (timeDiff < 3600) {\n        return [Math.round(timeDiff / 60), 'minute'];\n    }\n    if (timeDiff < 86400) {\n        return [Math.round(timeDiff / 3600), 'hour'];\n    }\n    if (timeDiff < 604800) {\n        return [Math.round(timeDiff / 86400), 'day'];\n    }\n    if (timeDiff < 2592000) {\n        return [Math.round(timeDiff / 604800), 'week'];\n    }\n    if (timeDiff < 220752000) {\n        return [Math.round(timeDiff / 2592000), 'month'];\n    }\n    return [Math.round(timeDiff / 220752000), 'year'];\n};\n\nexport const formatTimeDiffToString = (timestamp1?: number, timestamp2?: number, useSeconds?: boolean): string => {\n    const unformatted = formatTimeDiff(timestamp1, timestamp2, useSeconds);\n    return unformatted[0].toString() + ' ' + unformatted[1] + (unformatted[0] !== 1 ? 's' : '');\n}\n\nexport const formatTimeSince = (timestamp?: number): [number | string, string | undefined] => {\n    return formatTimeDiff(timestamp, Date.now() / 1000);\n};\n","module.exports = __webpack_public_path__ + \"static/media/loading.e7224f88.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2Y63x\",\"label\":\"Cell_label__3ePW_\",\"sunkenLabel\":\"Cell_sunkenLabel__3CcxM\",\"largelabel\":\"Cell_largelabel__24-9K\",\"info\":\"Cell_info__1BKSq\",\"mono\":\"Cell_mono__3WhQB\",\"dimmedValue\":\"Cell_dimmedValue__1W1mr\",\"decimals\":\"Cell_decimals__1fWGM\",\"unit\":\"Cell_unit__31Wzf\",\"loading\":\"Cell_loading__3bY5H\",\"link\":\"Cell_link__oj9kk\",\"accentuatedLink\":\"Cell_accentuatedLink__4FSBT\",\"normalCell\":\"Cell_normalCell__2ayJT\",\"lighterCell\":\"Cell_lighterCell__3JIpK\",\"lightCell\":\"Cell_lightCell__2_HD7\",\"darkerCell\":\"Cell_darkerCell__3UGjH\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Cell } from '../Cell/Cell.component';\n\nimport { IRow } from 'interfaces/IRow.interface';\n\nimport classes from './Row.module.scss';\n\nexport const Row: React.FC<IRow> = ({ label, labelWidth, labelSubText, labelSubTextLink, cells, wide, extrawide }) => {\n    const getLabelStyle = (width?: string): React.CSSProperties => {\n        var style: React.CSSProperties = {};\n\n        if (width) {\n            style.width = width;\n        }\n\n        return style;\n    };\n\n    var hasCellLabels: boolean = false;\n\n    cells.forEach((cell) => {\n        if (cell.label !== undefined) {\n            hasCellLabels = true;\n        }\n    });\n\n    return (\n        <div\n            className={`\n        ${classes.row} ${extrawide ? classes.verticalExtraPaddedRow : hasCellLabels || wide ? classes.verticalPaddedRow : ''}`}\n        >\n            <h3\n                className={`${classes.label} ${hasCellLabels ? classes.verticalPaddedLabel : ''} ${\n                    wide ? classes.wideRowLabel : ''\n                }`}\n                style={getLabelStyle(labelWidth)}\n            >\n                {label}\n                {labelSubText ? (\n                    <>\n                        <br />\n                        <span className={classes.labelSubText}>\n                        {labelSubTextLink ? (\n                            <Link to={labelSubTextLink}>{labelSubText}</Link>\n                        ) : labelSubText}\n                        </span>\n                    </>\n                ) : undefined}\n            </h3>\n            {cells.map((cell, index) => (\n                <Cell key={index} {...cell} />\n            ))}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__2Lsla\",\"label\":\"Row_label__9CPRA\",\"labelSubText\":\"Row_labelSubText__2Zx8n\",\"wideRowLabel\":\"Row_wideRowLabel__1zVT8\",\"verticalPaddedLabel\":\"Row_verticalPaddedLabel__3Mktc\",\"verticalPaddedRow\":\"Row_verticalPaddedRow__Lq_vu\",\"verticalExtraPaddedRow\":\"Row_verticalExtraPaddedRow__2w870\"};"],"sourceRoot":""}