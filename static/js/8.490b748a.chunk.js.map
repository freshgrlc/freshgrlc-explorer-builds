{"version":3,"sources":["components/BlockView/BlockMetaInfo/BlockMetaInfo.module.scss","components/BlockView/TransactionSummary/TransactionSummary.module.scss","components/BlockView/BlockView.module.scss","components/BlockView/BlockMetaInfo/BlockMetaInfo.component.tsx","components/BlockView/TransactionSummary/TransactionSummary.component.tsx","components/BlockView/BlockView.component.tsx","context/CoinInfo.context.ts","utils/getBaseUrl.util.ts","utils/getCoinInfo.util.ts","components/Section/Section.component.tsx","components/Section/Section.module.scss","components/Cell/Cell.component.tsx","components/Banner/FreshGRLCBanner/FreshGRLCBanner.module.scss","components/Banner/CoinSelector/CoinSelector.module.scss","components/Banner/SearchBar/SearchBar.module.scss","components/Banner/FreshGRLCBanner/FreshGRLCBanner.component.tsx","components/Banner/CoinSelector/CoinSelector.component.tsx","components/Banner/SearchBar/SearchBar.component.tsx","components/Banner/Banner.component.tsx","utils/formatNumericalValue.util.tsx","components/PageLoadAnimation/PageLoadAnimation.component.tsx","components/PageLoadAnimation/PageLoadAnimation.module.scss","assets/loading_large.svg","utils/padNumber.util.ts","utils/formatTime.util.ts","assets/loading.gif","components/Cell/Cell.module.scss","components/Row/Row.component.tsx","components/Row/Row.module.scss"],"names":["module","exports","BlockMetaInfo","isAddressMiner","minerName","minerLink","block","transactions","coinInfo","useContext","CoinInfoContext","minerLinkExternal","miner","name","indexOf","ticker","split","website","table","label","cells","data","height","notMono","firstseen","formatTime","formatTimeDiffToString","timestamp","relayedby","length","undefined","size","unit","totaltransacted","displaySymbol","alwaysSingular","decimals","totalfees","link","externalLink","cellStyle","linkColor","miningreward","difficulty","map","row","forEach","cell","align","className","classes","blockMetaInfo","header","blockhash","hash","explore","to","entry","index","key","wide","labelWidth","TransactionSummary","transaction","first","transactionSummary","largelabel","txid","totalvalue","coinbase","fee","fontSize","Object","keys","inputs","outputs","BlockView","routeParams","baseUrl","getBaseUrl","coin","getCoinInfo","useFetch","error","console","log","push","Provider","value","coins","getAllCoins","preferredCoin","createContext","Coins","displayName","blockTime","blockReward","logo","filter","Section","children","pagesection","sectionheader","Cell","maxDecimals","wrapInLink","contents","accentuatedLink","href","target","rel","style","processInnerCellStyle","processCellStyle","innerCell","sunken","sunkenData","backgroundColor","padding","borderRadius","width","marginRight","marginLeft","textColor","color","normal","smaller","small","hasData","formattedData","formatNumericalValue","decimalClass","unitClass","sunkenLabel","info","processOuterCellStyle","mono","dataNotImportant","dimmedValue","e","join","loading","src","alt","FreshGRLCBanner","title","subdomain","subtitle","subtext","banner","makeCoinsUrl","CoinSelector","coinSelector","Fragment","separator","selectableCoin","SearchBar","useState","searchFieldValue","updateSearchField","searchObject","setSearchObject","isLoading","setLoading","isError","setError","searchResults","setSearchResults","selectedObject","setSelectedObject","redirectUrl","redirectTo","useEffect","Promise","all","a","fetch","json","then","results","result","network","filtered","hasOwnProperty","address","Form","searchbar","onSubmit","trim","Input","placeholder","onChange","Banner","selectableCoins","rounded","number","negative","absolute","Math","abs","valueOf","integer","floor","decimalpart","roundTo","toString","roundedDecimals","toFixed","substring","replace","options","roundedData","isExactlyOne","formatDecimal","Number","PageLoadAnimation","wrapper","pageLoad","inner","padNumber","num","padStart","alwaysIncludeDate","includeDate","Date","now","date","zone","toLocaleTimeString","timeZoneName","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","formatTimeDiff","timestamp1","timestamp2","useSeconds","timeDiff","round","unformatted","Row","labelSubText","labelSubTextLink","extrawide","hasCellLabels","verticalExtraPaddedRow","verticalPaddedRow","verticalPaddedLabel","wideRowLabel","getLabelStyle"],"mappings":"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","file":"static/js/8.490b748a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockMetaInfo\":\"BlockMetaInfo_blockMetaInfo__2cMdE\",\"header\":\"BlockMetaInfo_header__135nT\",\"blockhash\":\"BlockMetaInfo_blockhash__26Wto\",\"explore\":\"BlockMetaInfo_explore__1CuA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionSummary\":\"TransactionSummary_transactionSummary__21vJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactions\":\"BlockView_transactions__oQGDc\"};","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { ICell, ICellStyle } from 'interfaces/ICell.interface';\nimport { IRow } from 'interfaces/IRow.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IBlockTransaction } from 'interfaces/ITransaction.interface';\n\nimport { formatTime, formatTimeDiffToString } from 'utils/formatTime.util';\n\nimport { Row } from 'components/Row/Row.component';\n\nimport classes from './BlockMetaInfo.module.scss';\n\ninterface IProps {\n    block: IBlock;\n    transactions?: IBlockTransaction[];\n}\n\nexport const BlockMetaInfo: React.FC<IProps> = ({ block, transactions }) => {\n    const coinInfo = useContext(CoinInfoContext);\n\n    /* FIXME: Deduplicate and move this logic somewhere else */\n    var isAddressMiner: boolean;\n    var minerName: string;\n    var minerLink: string | null;\n    var minerLinkExternal: boolean = false;\n\n    if (block.miner !== null) {\n        isAddressMiner = block.miner.name.indexOf(' (') !== -1;\n        minerName = block.miner.name;\n        minerLink = !isAddressMiner ? block.miner.website : `/${coinInfo.ticker}/address/${block.miner.name.split(' (')[0]}`;\n        minerLinkExternal = !isAddressMiner;\n    } else {\n        minerName = '(Unknown pool)';\n        minerLink = null;\n    }\n\n    const table: IRow[] = ([\n        {\n            label: 'Height',\n            cells: [\n                {\n                    data: block.height ? block.height : 'Orphaned, not part of blockchain',\n                    notMono: !block.height\n                },\n            ],\n        },\n        {\n            label: 'Block received',\n            cells: [\n                {\n                    data: block.firstseen\n                        ? (formatTime(block.firstseen, true) +\n                          ` (After ${formatTimeDiffToString(block.timestamp, block.firstseen, true)})`\n                        ) : '-',\n                    notMono: block.firstseen ? true : false\n                },\n            ],\n        },\n        {\n            label: 'Relayed by',\n            cells: [\n                {\n                    data: block.relayedby ? block.relayedby : '-'\n                },\n            ],\n        },\n        {\n            label: 'Transactions',\n            cells: [\n                {\n                    data: transactions != null ? transactions.length : undefined\n                },\n            ],\n        },\n        {\n            label: 'Total size',\n            cells: [\n                {\n                    data: block.size,\n                    unit: 'byte'\n                },\n            ],\n        },\n        {\n            label: 'Total transacted',\n            cells: [\n                {\n                    data: block.totaltransacted,\n                    unit: coinInfo.displaySymbol,\n                    alwaysSingular: true,\n                    decimals: 8\n                },\n            ],\n        },\n        {\n            label: 'Total mining fees',\n            cells: [\n                {\n                    data: block.totalfees,\n                    unit: coinInfo.displaySymbol,\n                    alwaysSingular: true,\n                    decimals: 8\n                },\n            ],\n        },\n        {\n            label: 'Mining started',\n            cells: [\n                {\n                    data: formatTime(block.timestamp, true),\n                    notMono: true,\n                },\n            ],\n        },\n        {\n            label: 'Miner',\n            cells: [\n                {\n                    data: minerName,\n                    notMono: true,\n                    link: minerLink,\n                    externalLink: minerLinkExternal,\n                    cellStyle: {\n                        linkColor: minerLinkExternal ? 'accentuate' : 'normal'\n                    }\n                },\n            ],\n        },\n        {\n            label: 'Mining reward',\n            cells: [\n                {\n                    data: block.miningreward,\n                    unit: coinInfo.displaySymbol,\n                    alwaysSingular: true,\n                    decimals: 8\n                },\n            ],\n        },\n        {\n            label: 'Mining difficulty',\n            cells: [\n                {\n                    data: block.difficulty,\n                },\n            ],\n        }\n    ] as IRow[]).map(\n        (row: IRow): IRow => {\n            row.cells.forEach((cell: ICell) => {\n                if (cell.cellStyle === undefined) {\n                    cell.cellStyle = {} as ICellStyle;\n                }\n                cell.cellStyle.align = 'left';\n            });\n            return row;\n        }\n    );\n\n    return (\n        <div className={classes.blockMetaInfo}>\n            <h3 className={classes.header}>\n                Block <span className={classes.blockhash}>{block.hash}</span>\n                <div className={classes.explore}>\n                    {block.height ? <Link to={`/${coinInfo.ticker}/blocks/?start=${block.height - (block.height % 40) + 40}`}>Show in list ➔</Link> : undefined}\n                </div>\n            </h3>\n            {table.map((entry, index) => (\n                <Row key={index} wide={true} labelWidth=\"200px\" {...entry} />\n            ))}\n        </div>\n    );\n};\n","import React, { useContext } from 'react';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IExpandedBlockTransaction } from 'interfaces/ITransaction.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\n\nimport { formatTime } from 'utils/formatTime.util';\n\nimport { Cell } from 'components/Cell/Cell.component';\n\n\nimport classes from './TransactionSummary.module.scss';\n\ninterface IProps {\n    transaction: IExpandedBlockTransaction;\n    block: IBlock;\n    first?: boolean;\n}\n\nexport const TransactionSummary: React.FC<IProps> = ({ transaction, block, first }) => {\n    const coinInfo = useContext(CoinInfoContext);\n    return (\n        <div className={classes.transactionSummary}>\n            <Cell\n                label={first ? 'First seen at' : undefined}\n                largelabel={true}\n                data={formatTime(\n                    transaction.firstseen ? transaction.firstseen :\n                    block.firstseen ? block.firstseen : block.timestamp,\n                    true)}\n                notMono={true}\n                cellStyle={{\n                    size: '200px',\n                }}\n            />\n            <Cell\n                label={first ? 'Transaction ID' : undefined}\n                largelabel={true}\n                data={transaction.txid}\n                link={`/${coinInfo.ticker}/transactions/${transaction.txid}`}\n                cellStyle={{\n                    size: '580px',\n                    linkColor: 'normal'\n                }}\n            />\n            <Cell\n                label={first ? 'Total transacted' : undefined}\n                largelabel={true}\n                data={transaction.totalvalue}\n                unit={coinInfo ? coinInfo.displaySymbol : undefined}\n                alwaysSingular={true}\n                decimals={8}\n                cellStyle={{\n                    size: '140px',\n                    align: 'right'\n                }}\n            />\n            {!transaction.coinbase ? (\n                <Cell\n                    label={first ? 'Feerate' : undefined}\n                    largelabel={true}\n                    data={(transaction.fee / transaction.size) * 1000000}\n                    unit={coinInfo ? 'µ' + coinInfo.displaySymbol + '/byte' : undefined}\n                    alwaysSingular={true}\n                    decimals={3}\n                    cellStyle={{\n                        size: '140px',\n                        align: 'right'\n                    }}\n                />\n            ) : (\n                <Cell\n                    label={first ? 'Feerate' : undefined}\n                    largelabel={true}\n                    data=\"-\"\n                    cellStyle={{\n                        size: '140px'\n                    }}\n                />\n            )}\n            <Cell\n                label={first ? 'Size' : undefined}\n                largelabel={true}\n                data={transaction.size}\n                unit=\"byte\"\n                cellStyle={{\n                    size: '100px',\n                    align: 'right'\n                }}\n            />\n            {transaction.coinbase ? (\n                <Cell\n                    label={first ? 'Inputs' : undefined}\n                    largelabel={true}\n                    data=\"(Coinbase)\"\n                    notMono={true}\n                    cellStyle={{\n                        size: '100px',\n                        fontSize: 'small'\n                    }}\n                />\n            ) : (\n                <Cell\n                    label={first ? 'Inputs' : undefined}\n                    largelabel={true}\n                    data={Object.keys(transaction.inputs).length}\n                    cellStyle={{\n                        size: '100px',\n                    }}\n                />\n            )}\n            <Cell\n                label={first ? 'Outputs' : undefined}\n                largelabel={true}\n                data={Object.keys(transaction.outputs).length}\n                cellStyle={{\n                    size: '60px',\n                }}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport useFetch from 'react-fetch-hook';\n\nimport { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\nimport { getCoinInfo, getAllCoins } from 'utils/getCoinInfo.util';\nimport { Redirect } from 'react-router';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IBlockTransaction, IExpandedBlockTransaction } from 'interfaces/ITransaction.interface';\n\nimport { Banner } from 'components/Banner/Banner.component';\nimport { Section } from 'components/Section/Section.component';\nimport { PageLoadAnimation } from 'components/PageLoadAnimation/PageLoadAnimation.component';\n\nimport { BlockMetaInfo } from './BlockMetaInfo/BlockMetaInfo.component';\nimport { TransactionSummary } from './TransactionSummary/TransactionSummary.component';\n\nimport classes from './BlockView.module.scss';\n\ninterface IProps {\n    routeParams: { coin: CoinTickerSymbol; hash: string };\n}\n\nexport const BlockView: React.FC<IProps> = ({ routeParams }) => {\n    const baseUrl = getBaseUrl(routeParams.coin);\n    const coinInfo = getCoinInfo(routeParams.coin);\n    const { data: block, error } = useFetch<IBlock>(\n        `${baseUrl}/blocks/${routeParams.hash}/?expand=miner`\n    );\n    const { data: transactions } = useFetch<IBlockTransaction[]>(\n        `${baseUrl}/blocks/${routeParams.hash}/transactions/?expand=inputs,outputs,coinbase`\n    );\n    if (error != null) {\n        console.log(error);\n        return <Redirect to=\"/error404\" push={false} />;\n    }\n    return (\n        <CoinInfoContext.Provider value={coinInfo}>\n            <Banner coins={getAllCoins()} preferredCoin={coinInfo ? coinInfo.ticker : undefined} />\n            {block != null ? (\n                <>\n                    <Section>\n                        <BlockMetaInfo block={block} transactions={transactions} />\n                    </Section>\n                    <Section header=\"Included transactions\">\n                        {transactions != null ? (\n                            <div className={classes.transactions}>\n                                {transactions.map((transaction: IBlockTransaction, index: number) => (\n                                    <TransactionSummary key={index} transaction={transaction as IExpandedBlockTransaction} block={block} first={index === 0} />\n                                ))}\n                            </div>\n                        ) : (\n                            <PageLoadAnimation />\n                        )}\n                    </Section>\n                </>\n            ) : (\n                <PageLoadAnimation />\n            )}\n        </CoinInfoContext.Provider>\n    );\n};\n","import { createContext } from 'react';\n\nimport { ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nexport const CoinInfoContext = createContext<ICoinInfo>(null!);\n","import { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nexport const getBaseUrl = (ticker: CoinTickerSymbol) => `https://api.freshgrlc.net/blockchain/${ticker}`;\n","import { CoinTickerSymbol, ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nconst Coins: ICoinInfo[] = [\n    {\n        ticker: 'grlc',\n        name: 'garlicoin',\n        displayName: 'Garlicoin',\n        displaySymbol: 'GRLC',\n        blockTime: 40,\n        blockReward: 25,\n        logo: 'garlicoin.svg',\n    },\n    {\n        ticker: 'tux',\n        name: 'tuxcoin',\n        displayName: 'Tuxcoin',\n        displaySymbol: 'TUX',\n        blockTime: 60,\n        blockReward: 33.5,\n        logo: 'tuxcoin.svg',\n    },\n    {\n        ticker: 'tgrlc',\n        name: 'garlicoin-testnet',\n        displayName: 'Garlicoin testnet',\n        displaySymbol: 'tGRLC',\n        blockTime: 40,\n        blockReward: 50,\n        logo: 'garlicoin.svg',\n    },\n];\n\nexport const getCoinInfo = (ticker: CoinTickerSymbol): ICoinInfo => {\n    return Coins.filter((coin) => coin.ticker === ticker)[0];\n};\n\nexport const getAllCoins = () => Coins;\n","import React from 'react';\n\nimport classes from './Section.module.scss';\n\ninterface IProps {\n    children?: any;\n    header?: string;\n}\n\nexport const Section: React.FC<IProps> = ({ children, header }) => {\n    return (\n        <div className={classes.pagesection}>\n            {header ? <h2 className={classes.sectionheader}>{header}</h2> : null}\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesection\":\"Section_pagesection__NIoLc\",\"sectionheader\":\"Section_sectionheader__1msZN\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport loading from 'assets/loading.gif';\n\nimport { ICell, ICellStyle } from 'interfaces/ICell.interface';\n\nimport { formatNumericalValue } from 'utils/formatNumericalValue.util';\n\nimport classes from './Cell.module.scss';\n\nexport const Cell: React.FC<ICell> = ({\n    label,\n    largelabel,\n    data,\n    link,\n    externalLink,\n    unit,\n    notMono,\n    decimals,\n    maxDecimals,\n    alwaysSingular,\n    cellStyle,\n}) => {\n    const wrapInLink = (contents: JSX.Element, cellStyle?: ICellStyle) => {\n        let className = classes.link + (cellStyle && cellStyle.linkColor !== 'normal' ? ' ' + classes.accentuatedLink : '');\n        return link ? (\n            externalLink ? (\n                <a\n                    className={className}\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={processInnerCellStyle(cellStyle)}\n                >\n                    {contents}\n                </a>\n            ) : (\n                <Link className={className} to={link} style={processInnerCellStyle(cellStyle)}>\n                    {contents}\n                </Link>\n            )\n        ) : (\n            <div style={processInnerCellStyle(cellStyle)}>{contents}</div>\n        );\n    };\n\n    const processCellStyle = (innerCell: boolean, cellStyle?: ICellStyle): React.CSSProperties | undefined => {\n        var style: React.CSSProperties = {};\n\n        if (!cellStyle) {\n            return undefined;\n        }\n\n        if (cellStyle.sunken || cellStyle.sunkenData) {\n            if (innerCell) {\n                style.backgroundColor = '#34322e';\n                style.padding = '4px';\n                style.borderRadius = '10px';\n                style.width = '90%';\n            } else {\n                style.height = '28px';\n            }\n        }\n\n        if (innerCell && cellStyle.align) {\n            if (cellStyle.align === 'left') {\n                style.marginRight = 'auto';\n            } else if (cellStyle.align === 'right') {\n                style.marginLeft = 'auto';\n            }\n        }\n\n        if (innerCell && cellStyle.textColor) {\n            style.color = cellStyle.textColor;\n        }\n\n        if (!innerCell && cellStyle.size) {\n            style.width = cellStyle.size;\n        }\n\n        if (!innerCell && cellStyle.fontSize) {\n            style.fontSize = {\n                normal: undefined,\n                smaller: '90%',\n                small: '85%',\n            }[cellStyle.fontSize];\n        }\n\n        return style;\n    };\n\n    const processOuterCellStyle = (cellStyle?: ICellStyle): React.CSSProperties | undefined =>\n        processCellStyle(false, cellStyle);\n    const processInnerCellStyle = (cellStyle?: ICellStyle): React.CSSProperties | undefined =>\n        processCellStyle(true, cellStyle);\n\n    const hasData = data !== null && data !== undefined;\n    const formattedData = hasData\n        ? formatNumericalValue(data as (string | number), {\n              decimals,\n              maxDecimals,\n              unit,\n              alwaysSingular,\n              decimalClass: classes.decimals,\n              unitClass: classes.unit\n          })\n        : undefined;\n\n    return (\n        <div className={`${classes.cell} ${cellStyle && cellStyle.color ? classes[cellStyle.color + 'Cell'] : ''}`}>\n            {label ? <h4 className={classes.label + (largelabel ? ' ' + classes.largelabel : '') + (cellStyle && cellStyle.sunken ? ' ' + classes.sunkenLabel : '')}>{label}</h4> : null}\n            <div className={classes.info} style={processOuterCellStyle(cellStyle)}>\n                {hasData ? (\n                    wrapInLink(<div\n                        className={[\n                            notMono ? undefined : classes.mono,\n                            cellStyle && cellStyle.dataNotImportant ? classes.dimmedValue : undefined\n                        ].filter(e => e !== undefined).join(' ')}\n                    >{formattedData}</div>, cellStyle)\n                ) : (\n                    wrapInLink(<img className={classes.loading} src={loading} alt=\"Loading\" />, cellStyle)\n                )}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"FreshGRLCBanner_banner__GV84b\",\"subdomain\":\"FreshGRLCBanner_subdomain__PJy6_\",\"subtext\":\"FreshGRLCBanner_subtext___Qo5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coinSelector\":\"CoinSelector_coinSelector__2igoQ\",\"separator\":\"CoinSelector_separator__3R6Lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__SqBc-\"};","import React from 'react';\n\nimport classes from './FreshGRLCBanner.module.scss';\n\n\ninterface IProps {\n    title?: string,\n    subdomain?: string,\n    subtitle?: string,\n    subtext?: string | JSX.Element\n}\n\nexport const FreshGRLCBanner: React.FC<IProps> = function({ title, subdomain, subtitle, subtext }) {\n    title = title ? title : 'FreshGRLC.NET';\n    return (\n        <div className={classes.banner}>\n            <h1>{ subdomain ? (<span className={classes.subdomain}>{subdomain}.</span>) : ''}{title}</h1>\n            { subtitle ? (<h2>{subtitle}</h2>) : undefined}\n            { subtext ? (<div className={classes.subtext}>{subtext}</div>) : undefined}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport classes from './CoinSelector.module.scss';\n\ninterface ICombinedCoins {\n    name: string;\n    coins: CoinTickerSymbol[];\n};\n\nexport type SingleOrCombinedCoin = ICoinInfo | ICombinedCoins;\n\ninterface IProps {\n    coins: SingleOrCombinedCoin[];\n}\n\nconst makeCoinsUrl = (coin: ICoinInfo | ICombinedCoins): string => {\n    const combinedCoins = coin as ICombinedCoins;\n    if (combinedCoins !== undefined && combinedCoins.coins !== undefined) {\n        const combinedCoins = coin as ICombinedCoins;\n        return combinedCoins.coins.join('+');\n    }\n    return (coin as ICoinInfo).ticker;\n};\n\nexport const CoinSelector: React.FC<IProps> = function({ coins }) {\n    return (\n        <div className={classes.coinSelector}>\n            Show information for:\n            {\n                coins.map((coin, index) => (\n                    <React.Fragment key={index}>\n                        {index ? (<span className={classes.separator}>{'\\u25CF'}</span>) : ''}\n                        <a className={classes.selectableCoin} href={`/${makeCoinsUrl(coin)}/home/`}>{coin.name}</a>\n                    </React.Fragment>\n                ))\n            }\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form } from 'semantic-ui-react';\n\nimport { IAddressInfo } from 'interfaces/IAddressInfo.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IBlockTransaction } from 'interfaces/ITransaction.interface';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\n\nimport classes from './SearchBar.module.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\ntype ISearchResult = IBlock | IBlockTransaction | IAddressInfo | null;\n\ninterface ISearchResultWithContext {\n    result: ISearchResult;\n    network: CoinTickerSymbol;\n}\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const SearchBar: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const [searchFieldValue, updateSearchField] = useState<string>('');\n    const [searchObject, setSearchObject] = useState<string>('');\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [isError, setError] = useState<boolean>(false);\n    const [searchResults, setSearchResults] = useState<ISearchResultWithContext[] | undefined>(undefined);\n    const [selectedObject, setSelectedObject] = useState<ISearchResultWithContext | undefined>(undefined);\n    const [redirectUrl, redirectTo] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        setError(false);\n    }, [searchFieldValue]);\n\n    useEffect(() => {\n        if (searchObject === '') {\n            setLoading(false);\n            return;\n        }\n\n        setLoading(true);\n        Promise.all(\n            coins.map(\n                async (coin) =>\n                    (await fetch(`${getBaseUrl(coin.ticker)}/search/${searchObject}`)).json() as Promise<ISearchResult>\n            )\n        )\n            .then((results) =>\n                results\n                    .map((result, index) => {\n                        return {\n                            result: result,\n                            network: coins[index].ticker,\n                        };\n                    })\n                    .filter((result) => result.result !== null)\n            )\n            .then(setSearchResults);\n    }, [coins, searchObject]);\n\n    useEffect(() => {\n        setLoading(false);\n        if (searchResults === undefined) return;\n\n        if (searchResults.length === 0) {\n            setError(true);\n            return;\n        }\n\n        if (searchResults.length > 1 && preferredCoin !== undefined) {\n            const filtered = searchResults.filter((result) => result.network === preferredCoin);\n            if (filtered.length > 0) {\n                setSelectedObject(filtered[0]);\n                return;\n            }\n        }\n\n        setSelectedObject(searchResults[0]);\n    }, [searchResults, preferredCoin]);\n\n    useEffect(() => {\n        if (selectedObject === undefined || selectedObject.result === null) return;\n\n        if (selectedObject.result.hasOwnProperty('txid')) {\n            const transaction = selectedObject.result as IBlockTransaction;\n            redirectTo(`/${selectedObject.network}/transactions/${transaction.txid}`);\n        } else if (selectedObject.result.hasOwnProperty('hash')) {\n            const block = selectedObject.result as IBlock;\n            redirectTo(`/${selectedObject.network}/blocks/${block.hash}`);\n        } else {\n            const address = selectedObject.result as IAddressInfo;\n            redirectTo(`/${selectedObject.network}/address/${address.address}`);\n        }\n    }, [selectedObject]);\n\n    /* FIXME */\n    return redirectUrl === undefined ? (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    ) : (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Redirect push to={redirectUrl} />\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { FreshGRLCBanner } from './FreshGRLCBanner/FreshGRLCBanner.component';\nimport { CoinSelector, SingleOrCombinedCoin } from './CoinSelector/CoinSelector.component';\nimport { SearchBar } from './SearchBar/SearchBar.component';\n\nimport { getCoinInfo } from 'utils/getCoinInfo.util';\n\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const Banner: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const selectableCoins: SingleOrCombinedCoin[] = [\n        getCoinInfo('grlc'),\n        getCoinInfo('tux'),\n        { name: '(both)', coins: ['grlc', 'tux'] },\n        getCoinInfo('tgrlc')\n    ];\n    return (\n        <FreshGRLCBanner subdomain=\"explorer\" subtitle=\"Multi-Blockchain Explorer\" subtext={(\n            <>\n                <CoinSelector coins={selectableCoins} />\n                <SearchBar coins={coins} preferredCoin={preferredCoin} />\n            </>\n        )}/>\n    );\n};\n","import React from 'react';\n\nexport const rounded = (number: number, decimals?: number, maxDecimals: number = 8): [number | string, string | undefined] => {\n    const negative = number < 0;\n    const absolute = Math.abs(number.valueOf());\n    const integer = Math.floor(absolute);\n    const decimalpart = absolute - integer;\n    const roundTo = decimals !== undefined ? decimals : decimalpart.toString().length > 2 + maxDecimals ? maxDecimals : undefined;\n    const roundedDecimals = (\n        roundTo !== undefined ? decimalpart.toFixed(roundTo) : decimalpart.toString()\n    ).substring(2, 2 + maxDecimals);\n\n    return [\n        negative ? integer === 0 ? '-0' : -integer : integer,\n        roundedDecimals !== '' ? (\n            decimals !== undefined ? roundedDecimals : roundedDecimals.replace(/0+$/, '')\n        ) : undefined\n    ];\n};\n\nexport const formatDecimal = (integer: number | string, decimalClass?: string, roundedDecimals?: string): JSX.Element => {\n    return (\n        <>\n            {integer}\n            {roundedDecimals ? <span className={decimalClass}>.{roundedDecimals}</span> : null}\n        </>\n    );\n};\n\ninterface INumericalValueOptions {\n    decimals?: number;\n    maxDecimals?: number;\n    unit?: string;\n    alwaysSingular?: boolean;\n    decimalClass?: string;\n    unitClass?: string;\n    dimValue?: boolean;\n}\n\nexport const formatNumericalValue = (value: number | string, options: INumericalValueOptions) => {\n    const { decimals, maxDecimals, unit, alwaysSingular, decimalClass, unitClass } = options;\n\n    let roundedData: [number | string, string | undefined] | undefined;\n    let formattedData: JSX.Element | string | undefined;\n    let isExactlyOne: boolean = false;\n\n    if (typeof value === 'number') {\n        roundedData = rounded(value, decimals, maxDecimals);\n        formattedData = formatDecimal(roundedData[0], decimalClass, roundedData[1]);\n    } else {\n        roundedData = rounded(Number(value), decimals, maxDecimals);\n        formattedData = value;\n    }\n    isExactlyOne = roundedData[0] in [-1, 1];\n\n    return (\n        <>\n            {formattedData}\n            {unit ? (\n                <div className={unitClass}>\n                    {' '}\n                    {unit}\n                    {isExactlyOne || alwaysSingular ? '' : 's'}\n                </div>\n            ) : null}\n        </>\n    );\n};\n","import React from 'react';\n\nimport classes from './PageLoadAnimation.module.scss';\n\nimport loading from 'assets/loading_large.svg';\n\nexport const PageLoadAnimation: React.FC = () => {\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.pageLoad}>\n                <div className={classes.inner}>\n                    <img src={loading} alt=\"\" />\n                    <h3>Loading...</h3>\n                </div>\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageLoadAnimation_wrapper__3xAcH\",\"pageLoad\":\"PageLoadAnimation_pageLoad__3wwZ4\",\"inner\":\"PageLoadAnimation_inner__1QFe0\"};","module.exports = __webpack_public_path__ + \"static/media/loading_large.346688c2.svg\";","export const padNumber = (num: number): string => {\n    return num.toString().padStart(2, '0');\n};\n","import { padNumber } from './padNumber.util';\n\nexport const formatTime = (timestamp: number | null | undefined, alwaysIncludeDate?: boolean): string => {\n    if (timestamp === null || timestamp === undefined) {\n        return 'Unknown';\n    }\n\n    const includeDate: boolean = alwaysIncludeDate || Date.now() / 1000 - timestamp > 86400;\n    const date = new Date(timestamp * 1000);\n    const zone = new Date().toLocaleTimeString('en-us', { timeZoneName: 'short' }).split(' ')[2];\n\n    /* FIXME: Detect browsers for people that don't get how calenders work */\n    return (\n        (includeDate\n            ? `${padNumber(date.getDate())}-${padNumber(date.getMonth() + 1)}-${padNumber(date.getFullYear())} `\n            : '') +\n        `${padNumber(date.getHours())}:${padNumber(date.getMinutes())}:${padNumber(date.getSeconds())} ${zone}`\n    );\n};\n\nexport const formatTimeDiff = (timestamp1?: number, timestamp2?: number, useSeconds?: boolean): [number | string, string | undefined] => {\n    if (timestamp1 === undefined || timestamp1 === null || timestamp2 === undefined) {\n        return ['Unknown', undefined];\n    }\n\n    const timeDiff = timestamp2 - timestamp1;\n\n    if (timeDiff < 60) {\n        return useSeconds ? [timeDiff, 'second'] : ['<1', 'minute'];\n    }\n    if (timeDiff < 3600) {\n        return [Math.round(timeDiff / 60), 'minute'];\n    }\n    if (timeDiff < 86400) {\n        return [Math.round(timeDiff / 3600), 'hour'];\n    }\n    if (timeDiff < 604800) {\n        return [Math.round(timeDiff / 86400), 'day'];\n    }\n    if (timeDiff < 2592000) {\n        return [Math.round(timeDiff / 604800), 'week'];\n    }\n    if (timeDiff < 220752000) {\n        return [Math.round(timeDiff / 2592000), 'month'];\n    }\n    return [Math.round(timeDiff / 220752000), 'year'];\n};\n\nexport const formatTimeDiffToString = (timestamp1?: number, timestamp2?: number, useSeconds?: boolean): string => {\n    const unformatted = formatTimeDiff(timestamp1, timestamp2, useSeconds);\n    return unformatted[0].toString() + ' ' + unformatted[1] + (unformatted[0] !== 1 ? 's' : '');\n}\n\nexport const formatTimeSince = (timestamp?: number): [number | string, string | undefined] => {\n    return formatTimeDiff(timestamp, Date.now() / 1000);\n};\n","module.exports = __webpack_public_path__ + \"static/media/loading.e7224f88.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2Y63x\",\"label\":\"Cell_label__3ePW_\",\"sunkenLabel\":\"Cell_sunkenLabel__3CcxM\",\"largelabel\":\"Cell_largelabel__24-9K\",\"info\":\"Cell_info__1BKSq\",\"mono\":\"Cell_mono__3WhQB\",\"dimmedValue\":\"Cell_dimmedValue__1W1mr\",\"decimals\":\"Cell_decimals__1fWGM\",\"unit\":\"Cell_unit__31Wzf\",\"loading\":\"Cell_loading__3bY5H\",\"link\":\"Cell_link__oj9kk\",\"accentuatedLink\":\"Cell_accentuatedLink__4FSBT\",\"normalCell\":\"Cell_normalCell__2ayJT\",\"lighterCell\":\"Cell_lighterCell__3JIpK\",\"lightCell\":\"Cell_lightCell__2_HD7\",\"darkerCell\":\"Cell_darkerCell__3UGjH\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Cell } from '../Cell/Cell.component';\n\nimport { IRow } from 'interfaces/IRow.interface';\n\nimport classes from './Row.module.scss';\n\nexport const Row: React.FC<IRow> = ({ label, labelWidth, labelSubText, labelSubTextLink, cells, wide, extrawide }) => {\n    const getLabelStyle = (width?: string): React.CSSProperties => {\n        var style: React.CSSProperties = {};\n\n        if (width) {\n            style.width = width;\n        }\n\n        return style;\n    };\n\n    var hasCellLabels: boolean = false;\n\n    cells.forEach((cell) => {\n        if (cell.label !== undefined) {\n            hasCellLabels = true;\n        }\n    });\n\n    return (\n        <div\n            className={`\n        ${classes.row} ${extrawide ? classes.verticalExtraPaddedRow : hasCellLabels || wide ? classes.verticalPaddedRow : ''}`}\n        >\n            <h3\n                className={`${classes.label} ${hasCellLabels ? classes.verticalPaddedLabel : ''} ${\n                    wide ? classes.wideRowLabel : ''\n                }`}\n                style={getLabelStyle(labelWidth)}\n            >\n                {label}\n                {labelSubText ? (\n                    <>\n                        <br />\n                        <span className={classes.labelSubText}>\n                        {labelSubTextLink ? (\n                            <Link to={labelSubTextLink}>{labelSubText}</Link>\n                        ) : labelSubText}\n                        </span>\n                    </>\n                ) : undefined}\n            </h3>\n            {cells.map((cell, index) => (\n                <Cell key={index} {...cell} />\n            ))}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__2Lsla\",\"label\":\"Row_label__9CPRA\",\"labelSubText\":\"Row_labelSubText__2Zx8n\",\"wideRowLabel\":\"Row_wideRowLabel__1zVT8\",\"verticalPaddedLabel\":\"Row_verticalPaddedLabel__3Mktc\",\"verticalPaddedRow\":\"Row_verticalPaddedRow__Lq_vu\",\"verticalExtraPaddedRow\":\"Row_verticalExtraPaddedRow__2w870\"};"],"sourceRoot":""}