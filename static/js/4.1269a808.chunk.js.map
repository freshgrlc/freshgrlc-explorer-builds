{"version":3,"sources":["components/Home/CoinOverview/Header/Header.module.scss","assets/logos sync /^/.//.*$","assets/logos/garlicoin.svg","assets/logos/tuxcoin.svg","components/Home/CoinOverview/NetworkInfo/NetworkInfo.module.scss","components/Home/CoinOverview/Transaction/Transaction.module.scss","components/Home/CoinOverview/Transactions/Transactions.module.scss","components/Home/CoinOverview/Mempool/Mempool.module.scss","components/Home/CoinOverview/Blocks/Block/Block.module.scss","components/Home/CoinOverview/Blocks/Link/Link.module.scss","components/Home/CoinOverview/CoinOverview.module.scss","components/Home/Home.module.scss","components/Home/CoinOverview/Header/Header.component.tsx","components/Home/CoinOverview/NetworkInfo/NetworkInfo.component.tsx","utils/adjustDifficulty.util.ts","utils/getNumberPoolsNeeded.util.ts","components/Home/CoinOverview/Transaction/Transaction.component.tsx","components/Home/CoinOverview/Transactions/Transactions.component.tsx","components/Home/CoinOverview/Mempool/Mempool.component.tsx","components/Home/CoinOverview/Blocks/Block/Block.component.tsx","components/Home/CoinOverview/Blocks/Link/Link.component.tsx","components/Home/CoinOverview/Blocks/Blocks.component.tsx","components/Home/CoinOverview/CoinOverview.component.tsx","components/Home/Home.component.tsx","context/CoinInfo.context.ts","utils/getBaseUrl.util.ts","utils/getCoinInfo.util.ts","components/Section/Section.component.tsx","components/Section/Section.module.scss","components/Cell/Cell.component.tsx","components/Banner/FreshGRLCBanner/FreshGRLCBanner.module.scss","components/Banner/CoinSelector/CoinSelector.module.scss","components/Banner/SearchBar/SearchBar.module.scss","components/Banner/FreshGRLCBanner/FreshGRLCBanner.component.tsx","components/Banner/CoinSelector/CoinSelector.component.tsx","components/Banner/SearchBar/SearchBar.component.tsx","components/Banner/Banner.component.tsx","utils/formatNumericalValue.util.tsx","utils/padNumber.util.ts","utils/formatTime.util.ts","assets/loading.gif","components/Cell/Cell.module.scss","components/Row/Row.component.tsx","components/Row/Row.module.scss"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Header","coinInfo","useContext","CoinInfoContext","className","classes","header","contents","img","src","require","logo","alt","text","displayName","NetworkInfo","latestBlock","baseUrl","yesterdayDate","useMemo","date","Date","setDate","getDate","getTime","toFixed","formattedBlock","height","toString","url","ticker","hash","timestamp","formatTime","firstseen","difficulty","adjusted","blockTime","blockReward","yesterday","useFetch","data","totalTransactions","totalCoins","poolData","richList","blocks","pool","amountmined","reduce","total","next","getDecentralization","useCallback","percentage","target","Math","ceil","poolDataSorted","slice","sort","a","b","runningCount","entries","index","length","getNumberPoolsNeeded","decentralization50","decentralization90","useState","undefined","average5000","setAverage5000","average50000","setAverage50000","useEffect","getAverage","depth","fetch","json","old","timeDifference","cancelled","average","addressesOwning50Percent","setAddressesOwning50Percent","addressesOwning90Percent","setAddressesOwning90Percent","currentTotal","found50","found90","totalFor50Percent","totalFor90Percent","forEach","entry","balance","table","label","labelSubText","labelSubTextLink","cells","link","cellStyle","linkColor","sunken","decimals","transactions","amount","totalvalue","unit","displaySymbol","alwaysSingular","coins","released","network","key","extrawide","Transaction","React","memo","transaction","showHeader","highlightRows","showPendingColumn","shortenedId","txid","substring","size","byteCount","byteUnit","timeSince","formatTimeDiff","pending","transactionHighlightedRow","fontSize","align","prev","Transactions","border","highLightedTransactions","style","calcHeight","Mempool","mempool","wrapper","none","Block","block","tableCellStyle","to","headerLabel","miner","website","name","externalLink","notMono","Link","Blocks","Fragment","CoinOverview","getBaseUrl","firstBlocks","firstUnconfirmedTransactions","setBlocks","unconfirmedTransactions","setUnconfirmedTransactions","calculateAndInjectPendingTime","now","reverse","blocksSubject","Subject","unconfirmedTransactionsSubject","bSub","subscribe","pop","unshift","uSub","es","EventSource","addEventListener","message","JSON","parse","event","unsubscribe","close","Provider","value","overview","explore","Home","routeParams","getAllCoins","selectedCoins","coin2","coin1","getCoinInfo","home","preferredCoin","overviews","coin","createContext","Coins","filter","Section","children","pagesection","sectionheader","Cell","largelabel","maxDecimals","wrapInLink","accentuatedLink","href","rel","processInnerCellStyle","processCellStyle","innerCell","sunkenData","backgroundColor","padding","borderRadius","width","marginRight","marginLeft","textColor","color","normal","smaller","small","hasData","formattedData","formatNumericalValue","decimalClass","unitClass","cell","sunkenLabel","info","processOuterCellStyle","mono","dataNotImportant","dimmedValue","join","loading","FreshGRLCBanner","title","subdomain","subtitle","subtext","banner","makeCoinsUrl","CoinSelector","coinSelector","separator","selectableCoin","SearchBar","searchFieldValue","updateSearchField","searchObject","setSearchObject","isLoading","setLoading","isError","setError","searchResults","setSearchResults","selectedObject","setSelectedObject","redirectUrl","redirectTo","Promise","all","then","results","result","filtered","hasOwnProperty","address","Form","searchbar","onSubmit","trim","Input","placeholder","error","onChange","push","Banner","selectableCoins","rounded","number","negative","absolute","abs","valueOf","integer","floor","decimalpart","roundTo","roundedDecimals","replace","options","roundedData","isExactlyOne","formatDecimal","Number","padNumber","num","padStart","alwaysIncludeDate","includeDate","zone","toLocaleTimeString","timeZoneName","split","getMonth","getFullYear","getHours","getMinutes","getSeconds","timestamp1","timestamp2","useSeconds","timeDiff","round","formatTimeDiffToString","unformatted","Row","labelWidth","wide","hasCellLabels","row","verticalExtraPaddedRow","verticalPaddedRow","verticalPaddedLabel","wideRowLabel","getLabelStyle"],"mappings":"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","file":"static/js/4.1269a808.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2vBya\",\"contents\":\"Header_contents__2w4y_\",\"text\":\"Header_text__JfxSB\",\"img\":\"Header_img__362wb\"};","var map = {\n\t\"./garlicoin.svg\": 206,\n\t\"./tuxcoin.svg\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 205;","module.exports = __webpack_public_path__ + \"static/media/garlicoin.8224fafa.svg\";","module.exports = __webpack_public_path__ + \"static/media/tuxcoin.6401c24e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"network\":\"NetworkInfo_network__3G-Hs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"Transaction_transaction__1uhhl\",\"transactionHighlightedRow\":\"Transaction_transactionHighlightedRow__2RPdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactions\":\"Transactions_transactions__2qY9a\",\"highLightedTransactions\":\"Transactions_highLightedTransactions__1PJpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mempool\":\"Mempool_mempool__88OnS\",\"wrapper\":\"Mempool_wrapper__1Bn_s\",\"none\":\"Mempool_none__3Mq1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__1w9q5\",\"header\":\"Block_header__zZYJq\",\"link\":\"Block_link__10vGw\",\"headerLabel\":\"Block_headerLabel__2j25Q\",\"data\":\"Block_data__14hrg\",\"transactions\":\"Block_transactions__1glP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__18MFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overview\":\"CoinOverview_overview__1lcnY\",\"explore\":\"CoinOverview_explore__O036A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overview\":\"Home_overview__1JyNk\",\"overviews\":\"Home_overviews__3P8Y8\"};","import React, { useContext } from 'react';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport classes from './Header.module.scss';\n\ninterface IProps {}\n\nexport const Header: React.FC<IProps> = () => {\n    const coinInfo = useContext(CoinInfoContext);\n    return coinInfo ? (\n        <h1 className={classes.header}>\n            <span className={classes.contents}>\n                <img className={classes.img} src={require(`assets/logos/${coinInfo.logo}`)} alt=\"\" />\n                <span className={classes.text}>{coinInfo.displayName}</span>\n            </span>\n        </h1>\n    ) : null;\n};\n","import React, { useMemo, useEffect, useState, useCallback, useContext } from 'react';\nimport useFetch from 'react-fetch-hook';\n\nimport { Row } from 'components/Row/Row.component';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IBlock, IBlockSimple } from 'interfaces/IBlock.interface';\nimport { INetworkStats } from 'interfaces/INetworkStats.interface';\nimport { IPoolStat } from 'interfaces/IPoolStat.interface';\nimport { IRichListEntry } from 'interfaces/IRichListEntry.interface';\n\nimport { adjustDifficulty } from 'utils/adjustDifficulty.util';\nimport { formatTime } from 'utils/formatTime.util';\nimport { getNumberPoolsNeeded } from 'utils/getNumberPoolsNeeded.util';\n\nimport classes from './NetworkInfo.module.scss';\nimport { IRow } from 'interfaces/IRow.interface';\n\ninterface IProps {\n    latestBlock?: IBlock;\n    baseUrl: string;\n}\n\nexport const NetworkInfo: React.FC<IProps> = ({ latestBlock, baseUrl }) => {\n    const coinInfo = useContext(CoinInfoContext);\n\n    const yesterdayDate = useMemo(() => {\n        const date = new Date();\n        date.setDate(date.getDate() - 1);\n        return (date.getTime() / 1000).toFixed(0);\n    }, []);\n\n    const formattedBlock = useMemo((): {\n        height?: string;\n        url?: string;\n        timestamp?: string;\n        difficulty?: number;\n        adjusted?: number;\n    } => {\n        if (latestBlock != null && coinInfo) {\n            return {\n                height: latestBlock.height.toString(),\n                url: `/${coinInfo.ticker}/blocks/${latestBlock.hash}`,\n                timestamp: formatTime(latestBlock.firstseen),\n                difficulty: latestBlock.difficulty,\n                adjusted: adjustDifficulty(latestBlock.difficulty, coinInfo.blockTime, coinInfo.blockReward),\n            };\n        } else {\n            return {};\n        }\n    }, [latestBlock, coinInfo]);\n\n    const { data: yesterday } = useFetch<INetworkStats>(`${baseUrl}/networkstats/?since=${yesterdayDate}`);\n\n    const { data: totalTransactions } = useFetch<number>(`${baseUrl}/networkstats/transactions/amount/?since=0`);\n\n    const { data: totalCoins } = useFetch<number>(`${baseUrl}/coins/total/released/`);\n\n    const { data: poolData } = useFetch<IPoolStat[]>(`${baseUrl}/poolstats/?since=${yesterdayDate}`);\n\n    const { data: richList } = useFetch<IRichListEntry[]>(`${baseUrl}/richlist/?limit=1000`);\n\n    const blocks = useMemo(() => {\n        if (poolData) {\n            return poolData.map((pool) => pool.amountmined).reduce((total, next) => total + next);\n        }\n    }, [poolData]);\n\n    const getDecentralization = useCallback(\n        (percentage: number) => {\n            if (poolData && blocks) {\n                return getNumberPoolsNeeded(percentage, blocks, poolData).toString();\n            }\n        },\n        [poolData, blocks]\n    );\n\n    const decentralization50 = useMemo(() => {\n        return getDecentralization(0.5);\n    }, [getDecentralization]);\n\n    const decentralization90 = useMemo(() => {\n        return getDecentralization(0.9);\n    }, [getDecentralization]);\n\n    const [average5000, setAverage5000] = useState<Number | undefined>(undefined);\n    const [average50000, setAverage50000] = useState<Number | undefined>(undefined);\n\n    useEffect(() => {\n        if (latestBlock != null) {\n            const getAverage = async (depth: number): Promise<number> => {\n                const old = ((await (await fetch(\n                    `${baseUrl}/blocks/?start=-${depth}&limit=1`\n                )).json()) as IBlockSimple[])[0];\n                const timeDifference = latestBlock.timestamp - old.timestamp;\n                return timeDifference / depth;\n            };\n            let cancelled = false;\n            (async () => {\n                const average = await getAverage(5000);\n                if (!cancelled) {\n                    setAverage5000(average);\n                }\n            })();\n            (async () => {\n                const average = await getAverage(50000);\n                if (!cancelled) {\n                    setAverage50000(average);\n                }\n            })();\n            return () => {\n                cancelled = true;\n            };\n        }\n    }, [baseUrl, latestBlock]);\n\n    const [addressesOwning50Percent, setAddressesOwning50Percent] = useState<number | string | undefined>(undefined);\n    const [addressesOwning90Percent, setAddressesOwning90Percent] = useState<number | string | undefined>(undefined);\n\n    useEffect(() => {\n        if (!richList || !totalCoins) {\n            setAddressesOwning50Percent(undefined);\n            setAddressesOwning90Percent(undefined);\n            return;\n        }\n\n        var currentTotal = 0.0;\n        var found50 = false;\n        var found90 = false;\n        const totalFor50Percent = totalCoins / 2;\n        const totalFor90Percent = totalCoins / 10 * 9;\n\n        richList.forEach((entry, index) => {\n            currentTotal += entry.balance;\n            if (!found50 && currentTotal >= totalFor50Percent) {\n                setAddressesOwning50Percent(index + 1);\n                found50 = true;\n            }\n            if (!found90 && currentTotal >= totalFor90Percent) {\n                setAddressesOwning90Percent(index + 1);\n                found90 = true;\n            }\n        });\n        if (!found90) {\n            setAddressesOwning90Percent('> ' + richList.length);\n            if (!found50) {\n                setAddressesOwning50Percent('> ' + richList.length);\n            }\n        }\n    }, [richList, totalCoins]);\n\n    const table = useMemo(() => {\n        let data: IRow[] = [\n            {\n                label: 'Latest Block',\n                labelSubText: 'Explore blockchain ➔',\n                labelSubTextLink: `/${coinInfo.ticker}/blocks/?start=${formattedBlock.height}&direction=desc`,\n                cells: [\n                    {\n                        label: 'Height',\n                        data: formattedBlock.height,\n                        link: formattedBlock.url,\n                        cellStyle: {\n                            linkColor: 'accentuate',\n                            sunken: true\n                        }\n                    },\n                    {\n                        label: 'Recieved at',\n                        data: formattedBlock.timestamp,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                ],\n            },\n            {\n                label: 'Mining Difficulty',\n                labelSubText: 'Difficulty graphs ➔',\n                labelSubTextLink: `/${coinInfo.ticker}/difficultygraphs`,\n                cells: [\n                    {\n                        label: 'Network',\n                        data: formattedBlock.difficulty,\n                        decimals: 3,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                    {\n                        label: 'Adjusted (50 coins/min)',\n                        data: formattedBlock.adjusted,\n                        decimals: 3,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                ],\n            },\n            {\n                label: '24-hour Activity',\n                cells: [\n                    {\n                        label: 'Transactions',\n                        data: yesterday != null ? yesterday.transactions.amount.toString() : undefined,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                    {\n                        label: 'Transacted Value',\n                        data:\n                            yesterday != null && yesterday.transactions.totalvalue\n                                ? yesterday.transactions.totalvalue\n                                : undefined,\n                        unit: coinInfo ? coinInfo.displaySymbol : undefined,\n                        alwaysSingular: true,\n                        decimals: 2,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                ],\n            },\n            {\n                label: '24-hour Mining',\n                cells: [\n                    {\n                        label: 'Blocks Mined',\n                        data: yesterday != null ? yesterday.blocks.amount.toString() : undefined,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                    {\n                        label: 'New Coins Released',\n                        data: yesterday != null ? yesterday.coins.released : undefined,\n                        unit: coinInfo ? coinInfo.displaySymbol : undefined,\n                        alwaysSingular: true,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                ],\n            },\n            {\n                label: 'Decentralization',\n                labelSubText: 'Pool distribution graph ➔',\n                labelSubTextLink: `/${coinInfo.ticker}/pooldistribution`,\n                cells: [\n                    {\n                        label: 'Controlling 50%',\n                        data: decentralization50,\n                        unit: 'pool',\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                    {\n                        label: 'Controlling 90%',\n                        data: decentralization90,\n                        unit: 'pool',\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                ],\n            },\n            {\n                label: 'Wealth distribution',\n                labelSubText: 'Show richlist ➔',\n                labelSubTextLink: `/${coinInfo.ticker}/richlist`,\n                cells: [\n                    {\n                        label: 'Owning 50%',\n                        data: addressesOwning50Percent,\n                        unit: 'addresses',\n                        alwaysSingular: true,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                    {\n                        label: 'Owning 90%',\n                        data: addressesOwning90Percent,\n                        unit: 'addresses',\n                        alwaysSingular: true,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                ],\n            },\n            {\n                label: 'Average Blocktime',\n                cells: [\n                    {\n                        label: 'Over 5,000 Blocks',\n                        data: average5000,\n                        unit: 'second',\n                        decimals: 2,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                    {\n                        label: 'Over 50,000 Blocks',\n                        data: average50000,\n                        unit: 'second',\n                        decimals: 2,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                ],\n            },\n            // {\n            //   label: \"Coin Value\",\n            //   cells: [\n            //     {\n            //       label: \"Fiat\",\n            //       data: \"0.279\",\n            //       unit: \"cent\"\n            //       cellStyle: {\n            //           sunken: true\n            //       }\n            //     },\n            //     {\n            //       label: \"Bitcoin\",\n            //       data: \"32.120\",\n            //       unit: \"satoshi\"\n            //       cellStyle: {\n            //           sunken: true\n            //       }\n            //     }\n            //   ]\n            // },\n            {\n                label: 'Network Totals',\n                cells: [\n                    {\n                        label: 'All-time Transactions',\n                        data: totalTransactions != null ? totalTransactions : undefined,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                    {\n                        label: 'Coins Released',\n                        data: totalCoins != null ? totalCoins : undefined,\n                        unit: coinInfo ? coinInfo.displaySymbol : undefined,\n                        alwaysSingular: true,\n                        decimals: 3,\n                        cellStyle: {\n                            sunken: true\n                        }\n                    },\n                ],\n            }\n        ];\n        return data;\n    }, [\n        formattedBlock,\n        yesterday,\n        totalCoins,\n        totalTransactions,\n        average5000,\n        average50000,\n        decentralization50,\n        decentralization90,\n        coinInfo,\n        addressesOwning50Percent,\n        addressesOwning90Percent\n    ]);\n\n    return (\n        <div className={classes.network}>\n            {table.map((entry, index) => (\n                <Row key={index} extrawide={true} {...entry} />\n            ))}\n        </div>\n    );\n};\n","export const adjustDifficulty = (difficulty: number, blockTime: number, blockReward: number): number => {\n    return ((difficulty * blockTime) / 60 / blockReward) * 50;\n};\n","import { IPoolStat } from 'interfaces/IPoolStat.interface';\n\nexport const getNumberPoolsNeeded = (percentage: number, blocks: number, poolData: IPoolStat[]): number => {\n    const target = Math.ceil(blocks * percentage);\n    const poolDataSorted = poolData.slice().sort((a, b) => (a.amountmined > b.amountmined ? -1 : 1));\n    let runningCount = 0;\n    for (const [index, pool] of poolDataSorted.entries()) {\n        runningCount += pool.amountmined;\n        if (runningCount >= target) {\n            return index + 1;\n        }\n    }\n    return poolData.length;\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { Cell } from 'components/Cell/Cell.component';\n\nimport { formatTimeDiff } from 'utils/formatTime.util';\n\nimport { IBlockTransaction, IUnconfirmedTransaction } from 'interfaces/ITransaction.interface';\n\nimport classes from './Transaction.module.scss';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\ninterface IProps {\n    transaction: IBlockTransaction | IUnconfirmedTransaction;\n    showHeader: boolean;\n    highlightRows?: boolean;\n    showPendingColumn?: boolean;\n}\n\nexport const Transaction: React.FC<IProps> = React.memo(\n    ({ transaction, showHeader, highlightRows, showPendingColumn }) => {\n        const coinInfo = useContext(CoinInfoContext);\n\n        const shortenedId = useMemo(\n            () =>\n                `${transaction.txid.substring(0, 8)}\\u2025${transaction.txid.substring(\n                    transaction.txid.length - 8,\n                    transaction.txid.length\n                )}`,\n            [transaction]\n        );\n        const [byteCount, byteUnit] = useMemo(() => [transaction.size, 'bytes'], [transaction]);\n\n        const timeSince: [number | string, string | undefined] = formatTimeDiff(0, transaction.pending);\n\n        return (\n            <div className={classes.transaction + (highlightRows ? ' ' + classes.transactionHighlightedRow : '')}>\n                {\n                    <>\n                        <Cell\n                            label={showHeader ? 'Transaction ID' : undefined}\n                            data={shortenedId}\n                            link={coinInfo ? `/${coinInfo.ticker}/transactions/${transaction.txid}` : undefined}\n                            cellStyle={{ fontSize: 'small' }}\n                        />\n                        <Cell\n                            label={showHeader ? 'Size' : undefined}\n                            data={byteCount}\n                            unit={byteUnit}\n                            alwaysSingular={true}\n                            cellStyle={{ align: 'right', size: '100px' }}\n                        />\n                        <Cell\n                            label={showHeader ? 'Value' : undefined}\n                            data={transaction.totalvalue}\n                            unit={coinInfo ? coinInfo.displaySymbol : ''}\n                            alwaysSingular={true}\n                            decimals={8}\n                            cellStyle={{ align: 'right', size: '155px' }}\n                        />\n                        {showPendingColumn ? (\n                            <Cell\n                                label={showHeader ? 'Pending' : undefined}\n                                data={timeSince[0]}\n                                unit={timeSince[1]}\n                                alwaysSingular={typeof timeSince[0] === 'string'}\n                            />\n                        ) : (\n                            undefined\n                        )}\n                    </>\n                }\n            </div>\n        );\n    },\n    (prev, next) =>\n        prev.transaction.txid === next.transaction.txid &&\n        prev.transaction.pending === next.transaction.pending &&\n        prev.showHeader === next.showHeader\n);\n","import React from 'react';\n\nimport { Transaction } from '../Transaction/Transaction.component';\n\nimport { IBlockTransaction, IUnconfirmedTransaction } from 'interfaces/ITransaction.interface';\n\nimport classes from './Transactions.module.scss';\n\ninterface IProps {\n    transactions: IBlockTransaction[] | IUnconfirmedTransaction[];\n    highlightRows?: boolean;\n    border?: boolean;\n    height: number;\n    showPendingColumn?: boolean;\n}\n\nexport const Transactions: React.FC<IProps> = ({ transactions, highlightRows, border, height, showPendingColumn }) => {\n    const calcHeight = (height: number): React.CSSProperties => {\n        var style: React.CSSProperties = {};\n\n        style.height = 31 + 34 * height;\n        return style;\n    };\n\n    return (\n        <div\n            className={`${classes.transactions} ${border ? classes.highLightedTransactions : ''}\n      `}\n            style={calcHeight(height)}\n        >\n            {(transactions as any[]).map((transaction: IBlockTransaction | IUnconfirmedTransaction, index) =>\n                index === 0 ? (\n                    <Transaction\n                        key={transaction.txid}\n                        transaction={transaction}\n                        highlightRows={highlightRows}\n                        showPendingColumn={showPendingColumn}\n                        showHeader={true}\n                    />\n                ) : (\n                    <Transaction\n                        key={transaction.txid}\n                        transaction={transaction}\n                        highlightRows={highlightRows}\n                        showPendingColumn={showPendingColumn}\n                        showHeader={false}\n                    />\n                )\n            )}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { Section } from 'components/Section/Section.component';\nimport { Transactions } from '../Transactions/Transactions.component';\nimport { IUnconfirmedTransaction } from 'interfaces/ITransaction.interface';\n\nimport classes from './Mempool.module.scss';\n\ninterface IProps {\n    transactions: IUnconfirmedTransaction[];\n}\n\nexport const Mempool: React.FC<IProps> = ({ transactions }) => {\n    return (\n        <Section header=\"Transactions waiting for confirmation\">\n            <div className={classes.mempool}>\n                {transactions.length > 0 ? (\n                    <div className={classes.wrapper}>\n                        <Transactions\n                            transactions={transactions}\n                            height={5}\n                            border={false}\n                            highlightRows={true}\n                            showPendingColumn={true}\n                        />\n                    </div>\n                ) : (\n                    <span className={classes.none}>\n                        <h4>No unconfirmed transactions</h4>\n                    </span>\n                )}\n            </div>\n        </Section>\n    );\n};\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Cell } from 'components/Cell/Cell.component';\nimport { Transactions } from '../../Transactions/Transactions.component';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { ICellStyle } from 'interfaces/ICell.interface';\n\nimport { formatTime } from 'utils/formatTime.util';\n\nimport classes from './Block.module.scss';\n\ninterface IProps {\n    block: IBlock;\n}\n\nexport const Block: React.FC<IProps> = React.memo(\n    ({ block }) => {\n        const coinInfo = useContext(CoinInfoContext);\n        const tableCellStyle: ICellStyle = { sunken: true };\n        return coinInfo ? (\n            <div className={classes.block}>\n                <h3 className={classes.header}>\n                    <Link to={`/${coinInfo.ticker}/blocks/${block.hash}`} className={classes.link}>\n                        <div className={classes.headerLabel}>Block</div>\n                        {block.hash}\n                    </Link>\n                </h3>\n                <div className={classes.data}>\n                    <Cell label=\"Height\" data={block.height.toString()} cellStyle={tableCellStyle} />\n                    <Cell label=\"Difficulty\" data={block.difficulty.toString()} cellStyle={tableCellStyle} />\n                    <Cell label=\"Received at\" data={formatTime(block.firstseen)} cellStyle={tableCellStyle} />\n                </div>\n                <div className={classes.data}>\n                    <Cell\n                        label=\"Miner\"\n                        data={block.miner && block.miner.website ? block.miner.name : 'Unknown Pool'}\n                        link={block.miner ? block.miner.website : undefined}\n                        externalLink={true}\n                        notMono={true}\n                        cellStyle={tableCellStyle}\n                    />\n                    <Cell label=\"Size\" data={block.size.toString()} unit=\"byte\" cellStyle={tableCellStyle} />\n                    <Cell\n                        label=\"Transactions\"\n                        data={block.transactions.length.toString()}\n                        cellStyle={tableCellStyle}\n                    />\n                </div>\n                <div className={classes.transactions}>\n                    <Transactions transactions={block.transactions} height={4} highlightRows={true} />\n                </div>\n            </div>\n        ) : null;\n    },\n    (prev, next) => prev.block.hash === next.block.hash\n);\n","import React from 'react';\n\nimport classes from './Link.module.scss';\n\ninterface IProps {}\n\nexport const Link: React.FC<IProps> = () => {\n    return <div className={classes.link}></div>;\n};\n","import React from 'react';\n\nimport { Block } from './Block/Block.component';\nimport { Link } from './Link/Link.component';\n\nimport { IBlock } from 'interfaces/IBlock.interface';\n\n// import classes from \"./Blocks.module.scss\";\n\ninterface IProps {\n    blocks: IBlock[];\n}\n\nexport const Blocks: React.FC<IProps> = ({ blocks }) => {\n    return (\n        <>\n            {blocks.map((block) => (\n                <React.Fragment key={block.hash}>\n                    <Block block={block} />\n                    <Link />\n                </React.Fragment>\n            ))}\n        </>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Subject } from 'rxjs';\nimport useFetch from 'react-fetch-hook';\n\nimport { Section } from 'components/Section/Section.component';\n\nimport { Header } from './Header/Header.component';\nimport { NetworkInfo } from './NetworkInfo/NetworkInfo.component';\nimport { Mempool } from './Mempool/Mempool.component';\nimport { Blocks } from './Blocks/Blocks.component';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { ICoinInfo } from 'interfaces/ICoinInfo.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IUnconfirmedTransaction } from 'interfaces/ITransaction.interface';\nimport { IEventMessage } from 'interfaces/IEventMessage.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\n\nimport classes from './CoinOverview.module.scss';\n\ninterface IProps {\n    coinInfo: ICoinInfo;\n}\n\nexport const CoinOverview: React.FC<IProps> = ({ coinInfo }) => {\n    const baseUrl = getBaseUrl(coinInfo.ticker);\n\n    const blockCount = 10;\n\n    const { data: firstBlocks } = useFetch<IBlock[]>(\n        `${baseUrl}/blocks/?start=-${blockCount}&limit=${blockCount}&expand=miner,transactions`\n    );\n    const { data: firstUnconfirmedTransactions } = useFetch<IUnconfirmedTransaction[]>(\n        `${baseUrl}/transactions/?confirmed=false`\n    );\n    const [blocks, setBlocks] = useState<IBlock[]>([]);\n    const [unconfirmedTransactions, setUnconfirmedTransactions] = useState<IUnconfirmedTransaction[]>([]);\n\n    const calculateAndInjectPendingTime = (transactions: IUnconfirmedTransaction[]): IUnconfirmedTransaction[] => {\n        return (transactions as any[]).map((transaction: IUnconfirmedTransaction) => {\n            if (transaction.firstseen !== null) {\n                transaction.pending = Date.now() / 1000 - transaction.firstseen;\n            }\n            return transaction;\n        });\n    };\n\n    useEffect(() => {\n        if (firstBlocks != null && firstUnconfirmedTransactions != null) {\n            setBlocks(firstBlocks.slice().reverse());\n            setUnconfirmedTransactions(calculateAndInjectPendingTime(firstUnconfirmedTransactions));\n            const blocksSubject = new Subject<IBlock>();\n            const unconfirmedTransactionsSubject = new Subject<IUnconfirmedTransaction[]>();\n            const bSub = blocksSubject.subscribe({\n                next: (block) => {\n                    setBlocks((blocks) => {\n                        if (blocks[0].hash !== block.hash) {\n                            const slice = blocks.slice();\n                            slice.pop();\n                            slice.unshift(block);\n                            return slice;\n                        } else {\n                            return blocks;\n                        }\n                    });\n                },\n            });\n            const uSub = unconfirmedTransactionsSubject.subscribe({\n                next: (mempool) => {\n                    setUnconfirmedTransactions(calculateAndInjectPendingTime(mempool));\n                },\n            });\n            const es = new EventSource(`${baseUrl}/events/subscribe?channels=mempool,blocks,keepalive`);\n            es.addEventListener('message', (message) => {\n                const { event, data } = JSON.parse(message.data) as IEventMessage;\n                if (event === 'mempoolupdate') {\n                    unconfirmedTransactionsSubject.next((data as unknown) as IUnconfirmedTransaction[]);\n                } else if (event === 'newblock') {\n                    blocksSubject.next((data as unknown) as IBlock);\n                }\n            });\n\n            return () => {\n                bSub.unsubscribe();\n                uSub.unsubscribe();\n                es.close();\n            };\n        }\n    }, [baseUrl, firstBlocks, firstUnconfirmedTransactions]);\n\n    return (\n        <CoinInfoContext.Provider value={coinInfo}>\n            <div className={classes.overview}>\n                <Section>\n                    <Header />\n                    <NetworkInfo latestBlock={blocks[0]} baseUrl={baseUrl} />\n                </Section>\n                <Mempool transactions={unconfirmedTransactions} />\n                <Section header=\"Blockchain\">\n                    <div className={classes.explore}>\n                        {blocks && blocks[0] ? (\n                            <Link to={`/${coinInfo.ticker}/blocks/?start=${blocks[0].height}&direction=desc`}>Explore ➔</Link>\n                        ) : 'Explore ➔'}\n                    </div>\n                    <Blocks blocks={blocks} />\n                </Section>\n            </div>\n        </CoinInfoContext.Provider>\n    );\n};\n","import React from 'react';\n\nimport { CoinOverview } from './CoinOverview/CoinOverview.component';\nimport { Banner } from 'components/Banner/Banner.component';\n\nimport { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getAllCoins, getCoinInfo } from 'utils/getCoinInfo.util';\n\nimport classes from './Home.module.scss';\n\ninterface IProps {\n    routeParams: {\n        coin1: CoinTickerSymbol;\n        coin2?: CoinTickerSymbol;\n    };\n}\n\nexport const Home: React.FC<IProps> = ({ routeParams }) => {\n    const coins = getAllCoins();\n    var selectedCoins = [ coins[0], coins[1] ];\n\n    if (routeParams !== undefined) {\n        if (routeParams.coin2 !== undefined) {\n            selectedCoins = [\n                routeParams.coin1,\n                routeParams.coin2\n            ].map(ticker => getCoinInfo(ticker as CoinTickerSymbol));\n        } else {\n            selectedCoins = [ getCoinInfo(routeParams.coin1 as CoinTickerSymbol) ];\n        }\n    }\n\n    return (\n        <div className={classes.home}>\n            <Banner coins={coins} preferredCoin={selectedCoins.length === 1 ? selectedCoins[0].ticker : undefined} />\n            <div className={classes.overview + (selectedCoins.length > 1 ? ' ' + classes.overviews : '')}>\n                { selectedCoins.map((coin, index) => ( <CoinOverview key={index} coinInfo={coin} /> )) }\n            </div>\n        </div>\n    );\n};\n","import { createContext } from 'react';\n\nimport { ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nexport const CoinInfoContext = createContext<ICoinInfo>(null!);\n","import { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nexport const getBaseUrl = (ticker: CoinTickerSymbol) => `https://api.freshgrlc.net/blockchain/${ticker}`;\n","import { CoinTickerSymbol, ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nconst Coins: ICoinInfo[] = [\n    {\n        ticker: 'grlc',\n        name: 'garlicoin',\n        displayName: 'Garlicoin',\n        displaySymbol: 'GRLC',\n        blockTime: 40,\n        blockReward: 25,\n        logo: 'garlicoin.svg',\n    },\n    {\n        ticker: 'tux',\n        name: 'tuxcoin',\n        displayName: 'Tuxcoin',\n        displaySymbol: 'TUX',\n        blockTime: 60,\n        blockReward: 33.5,\n        logo: 'tuxcoin.svg',\n    },\n    {\n        ticker: 'tgrlc',\n        name: 'garlicoin-testnet',\n        displayName: 'Garlicoin testnet',\n        displaySymbol: 'tGRLC',\n        blockTime: 40,\n        blockReward: 50,\n        logo: 'garlicoin.svg',\n    },\n];\n\nexport const getCoinInfo = (ticker: CoinTickerSymbol): ICoinInfo => {\n    return Coins.filter((coin) => coin.ticker === ticker)[0];\n};\n\nexport const getAllCoins = () => Coins;\n","import React from 'react';\n\nimport classes from './Section.module.scss';\n\ninterface IProps {\n    children?: any;\n    header?: string;\n}\n\nexport const Section: React.FC<IProps> = ({ children, header }) => {\n    return (\n        <div className={classes.pagesection}>\n            {header ? <h2 className={classes.sectionheader}>{header}</h2> : null}\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesection\":\"Section_pagesection__NIoLc\",\"sectionheader\":\"Section_sectionheader__1msZN\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport loading from 'assets/loading.gif';\n\nimport { ICell, ICellStyle } from 'interfaces/ICell.interface';\n\nimport { formatNumericalValue } from 'utils/formatNumericalValue.util';\n\nimport classes from './Cell.module.scss';\n\nexport const Cell: React.FC<ICell> = ({\n    label,\n    largelabel,\n    data,\n    link,\n    externalLink,\n    unit,\n    notMono,\n    decimals,\n    maxDecimals,\n    alwaysSingular,\n    cellStyle,\n}) => {\n    const wrapInLink = (contents: JSX.Element, cellStyle?: ICellStyle) => {\n        let className = classes.link + (cellStyle && cellStyle.linkColor !== 'normal' ? ' ' + classes.accentuatedLink : '');\n        return link ? (\n            externalLink ? (\n                <a\n                    className={className}\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={processInnerCellStyle(cellStyle)}\n                >\n                    {contents}\n                </a>\n            ) : (\n                <Link className={className} to={link} style={processInnerCellStyle(cellStyle)}>\n                    {contents}\n                </Link>\n            )\n        ) : (\n            <div style={processInnerCellStyle(cellStyle)}>{contents}</div>\n        );\n    };\n\n    const processCellStyle = (innerCell: boolean, cellStyle?: ICellStyle): React.CSSProperties | undefined => {\n        var style: React.CSSProperties = {};\n\n        if (!cellStyle) {\n            return undefined;\n        }\n\n        if (cellStyle.sunken || cellStyle.sunkenData) {\n            if (innerCell) {\n                style.backgroundColor = '#34322e';\n                style.padding = '4px';\n                style.borderRadius = '10px';\n                style.width = '90%';\n            } else {\n                style.height = '28px';\n            }\n        }\n\n        if (innerCell && cellStyle.align) {\n            if (cellStyle.align === 'left') {\n                style.marginRight = 'auto';\n            } else if (cellStyle.align === 'right') {\n                style.marginLeft = 'auto';\n            }\n        }\n\n        if (innerCell && cellStyle.textColor) {\n            style.color = cellStyle.textColor;\n        }\n\n        if (!innerCell && cellStyle.size) {\n            style.width = cellStyle.size;\n        }\n\n        if (!innerCell && cellStyle.fontSize) {\n            style.fontSize = {\n                normal: undefined,\n                smaller: '90%',\n                small: '85%',\n            }[cellStyle.fontSize];\n        }\n\n        return style;\n    };\n\n    const processOuterCellStyle = (cellStyle?: ICellStyle): React.CSSProperties | undefined =>\n        processCellStyle(false, cellStyle);\n    const processInnerCellStyle = (cellStyle?: ICellStyle): React.CSSProperties | undefined =>\n        processCellStyle(true, cellStyle);\n\n    const hasData = data !== null && data !== undefined;\n    const formattedData = hasData\n        ? formatNumericalValue(data as (string | number), {\n              decimals,\n              maxDecimals,\n              unit,\n              alwaysSingular,\n              decimalClass: classes.decimals,\n              unitClass: classes.unit\n          })\n        : undefined;\n\n    return (\n        <div className={`${classes.cell} ${cellStyle && cellStyle.color ? classes[cellStyle.color + 'Cell'] : ''}`}>\n            {label ? <h4 className={classes.label + (largelabel ? ' ' + classes.largelabel : '') + (cellStyle && cellStyle.sunken ? ' ' + classes.sunkenLabel : '')}>{label}</h4> : null}\n            <div className={classes.info} style={processOuterCellStyle(cellStyle)}>\n                {hasData ? (\n                    wrapInLink(<div\n                        className={[\n                            notMono ? undefined : classes.mono,\n                            cellStyle && cellStyle.dataNotImportant ? classes.dimmedValue : undefined\n                        ].filter(e => e !== undefined).join(' ')}\n                    >{formattedData}</div>, cellStyle)\n                ) : (\n                    wrapInLink(<img className={classes.loading} src={loading} alt=\"Loading\" />, cellStyle)\n                )}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"FreshGRLCBanner_banner__GV84b\",\"subdomain\":\"FreshGRLCBanner_subdomain__PJy6_\",\"subtext\":\"FreshGRLCBanner_subtext___Qo5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coinSelector\":\"CoinSelector_coinSelector__2igoQ\",\"separator\":\"CoinSelector_separator__3R6Lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__SqBc-\"};","import React from 'react';\n\nimport classes from './FreshGRLCBanner.module.scss';\n\n\ninterface IProps {\n    title?: string,\n    subdomain?: string,\n    subtitle?: string,\n    subtext?: string | JSX.Element\n}\n\nexport const FreshGRLCBanner: React.FC<IProps> = function({ title, subdomain, subtitle, subtext }) {\n    title = title ? title : 'FreshGRLC.NET';\n    return (\n        <div className={classes.banner}>\n            <h1>{ subdomain ? (<span className={classes.subdomain}>{subdomain}.</span>) : ''}{title}</h1>\n            { subtitle ? (<h2>{subtitle}</h2>) : undefined}\n            { subtext ? (<div className={classes.subtext}>{subtext}</div>) : undefined}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport classes from './CoinSelector.module.scss';\n\ninterface ICombinedCoins {\n    name: string;\n    coins: CoinTickerSymbol[];\n};\n\nexport type SingleOrCombinedCoin = ICoinInfo | ICombinedCoins;\n\ninterface IProps {\n    coins: SingleOrCombinedCoin[];\n}\n\nconst makeCoinsUrl = (coin: ICoinInfo | ICombinedCoins): string => {\n    const combinedCoins = coin as ICombinedCoins;\n    if (combinedCoins !== undefined && combinedCoins.coins !== undefined) {\n        const combinedCoins = coin as ICombinedCoins;\n        return combinedCoins.coins.join('+');\n    }\n    return (coin as ICoinInfo).ticker;\n};\n\nexport const CoinSelector: React.FC<IProps> = function({ coins }) {\n    return (\n        <div className={classes.coinSelector}>\n            Show information for:\n            {\n                coins.map((coin, index) => (\n                    <React.Fragment key={index}>\n                        {index ? (<span className={classes.separator}>{'\\u25CF'}</span>) : ''}\n                        <a className={classes.selectableCoin} href={`/${makeCoinsUrl(coin)}/home/`}>{coin.name}</a>\n                    </React.Fragment>\n                ))\n            }\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form } from 'semantic-ui-react';\n\nimport { IAddressInfo } from 'interfaces/IAddressInfo.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IBlockTransaction } from 'interfaces/ITransaction.interface';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\n\nimport classes from './SearchBar.module.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\ntype ISearchResult = IBlock | IBlockTransaction | IAddressInfo | null;\n\ninterface ISearchResultWithContext {\n    result: ISearchResult;\n    network: CoinTickerSymbol;\n}\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const SearchBar: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const [searchFieldValue, updateSearchField] = useState<string>('');\n    const [searchObject, setSearchObject] = useState<string>('');\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [isError, setError] = useState<boolean>(false);\n    const [searchResults, setSearchResults] = useState<ISearchResultWithContext[] | undefined>(undefined);\n    const [selectedObject, setSelectedObject] = useState<ISearchResultWithContext | undefined>(undefined);\n    const [redirectUrl, redirectTo] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        setError(false);\n    }, [searchFieldValue]);\n\n    useEffect(() => {\n        if (searchObject === '') {\n            setLoading(false);\n            return;\n        }\n\n        setLoading(true);\n        Promise.all(\n            coins.map(\n                async (coin) =>\n                    (await fetch(`${getBaseUrl(coin.ticker)}/search/${searchObject}`)).json() as Promise<ISearchResult>\n            )\n        )\n            .then((results) =>\n                results\n                    .map((result, index) => {\n                        return {\n                            result: result,\n                            network: coins[index].ticker,\n                        };\n                    })\n                    .filter((result) => result.result !== null)\n            )\n            .then(setSearchResults);\n    }, [coins, searchObject]);\n\n    useEffect(() => {\n        setLoading(false);\n        if (searchResults === undefined) return;\n\n        if (searchResults.length === 0) {\n            setError(true);\n            return;\n        }\n\n        if (searchResults.length > 1 && preferredCoin !== undefined) {\n            const filtered = searchResults.filter((result) => result.network === preferredCoin);\n            if (filtered.length > 0) {\n                setSelectedObject(filtered[0]);\n                return;\n            }\n        }\n\n        setSelectedObject(searchResults[0]);\n    }, [searchResults, preferredCoin]);\n\n    useEffect(() => {\n        if (selectedObject === undefined || selectedObject.result === null) return;\n\n        if (selectedObject.result.hasOwnProperty('txid')) {\n            const transaction = selectedObject.result as IBlockTransaction;\n            redirectTo(`/${selectedObject.network}/transactions/${transaction.txid}`);\n        } else if (selectedObject.result.hasOwnProperty('hash')) {\n            const block = selectedObject.result as IBlock;\n            redirectTo(`/${selectedObject.network}/blocks/${block.hash}`);\n        } else {\n            const address = selectedObject.result as IAddressInfo;\n            redirectTo(`/${selectedObject.network}/address/${address.address}`);\n        }\n    }, [selectedObject]);\n\n    /* FIXME */\n    return redirectUrl === undefined ? (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    ) : (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Redirect push to={redirectUrl} />\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { FreshGRLCBanner } from './FreshGRLCBanner/FreshGRLCBanner.component';\nimport { CoinSelector, SingleOrCombinedCoin } from './CoinSelector/CoinSelector.component';\nimport { SearchBar } from './SearchBar/SearchBar.component';\n\nimport { getCoinInfo } from 'utils/getCoinInfo.util';\n\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const Banner: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const selectableCoins: SingleOrCombinedCoin[] = [\n        getCoinInfo('grlc'),\n        getCoinInfo('tux'),\n        { name: '(both)', coins: ['grlc', 'tux'] },\n        getCoinInfo('tgrlc')\n    ];\n    return (\n        <FreshGRLCBanner subdomain=\"explorer\" subtitle=\"Multi-Blockchain Explorer\" subtext={(\n            <>\n                <CoinSelector coins={selectableCoins} />\n                <SearchBar coins={coins} preferredCoin={preferredCoin} />\n            </>\n        )}/>\n    );\n};\n","import React from 'react';\n\nexport const rounded = (number: number, decimals?: number, maxDecimals: number = 8): [number | string, string | undefined] => {\n    const negative = number < 0;\n    const absolute = Math.abs(number.valueOf());\n    const integer = Math.floor(absolute);\n    const decimalpart = absolute - integer;\n    const roundTo = decimals !== undefined ? decimals : decimalpart.toString().length > 2 + maxDecimals ? maxDecimals : undefined;\n    const roundedDecimals = (\n        roundTo !== undefined ? decimalpart.toFixed(roundTo) : decimalpart.toString()\n    ).substring(2, 2 + maxDecimals);\n\n    return [\n        negative ? integer === 0 ? '-0' : -integer : integer,\n        roundedDecimals !== '' ? (\n            decimals !== undefined ? roundedDecimals : roundedDecimals.replace(/0+$/, '')\n        ) : undefined\n    ];\n};\n\nexport const formatDecimal = (integer: number | string, decimalClass?: string, roundedDecimals?: string): JSX.Element => {\n    return (\n        <>\n            {integer}\n            {roundedDecimals ? <span className={decimalClass}>.{roundedDecimals}</span> : null}\n        </>\n    );\n};\n\ninterface INumericalValueOptions {\n    decimals?: number;\n    maxDecimals?: number;\n    unit?: string;\n    alwaysSingular?: boolean;\n    decimalClass?: string;\n    unitClass?: string;\n    dimValue?: boolean;\n}\n\nexport const formatNumericalValue = (value: number | string, options: INumericalValueOptions) => {\n    const { decimals, maxDecimals, unit, alwaysSingular, decimalClass, unitClass } = options;\n\n    let roundedData: [number | string, string | undefined] | undefined;\n    let formattedData: JSX.Element | string | undefined;\n    let isExactlyOne: boolean = false;\n\n    if (typeof value === 'number') {\n        roundedData = rounded(value, decimals, maxDecimals);\n        formattedData = formatDecimal(roundedData[0], decimalClass, roundedData[1]);\n    } else {\n        roundedData = rounded(Number(value), decimals, maxDecimals);\n        formattedData = value;\n    }\n    isExactlyOne = roundedData[0] in [-1, 1];\n\n    return (\n        <>\n            {formattedData}\n            {unit ? (\n                <div className={unitClass}>\n                    {' '}\n                    {unit}\n                    {isExactlyOne || alwaysSingular ? '' : 's'}\n                </div>\n            ) : null}\n        </>\n    );\n};\n","export const padNumber = (num: number): string => {\n    return num.toString().padStart(2, '0');\n};\n","import { padNumber } from './padNumber.util';\n\nexport const formatTime = (timestamp: number | null | undefined, alwaysIncludeDate?: boolean): string => {\n    if (timestamp === null || timestamp === undefined) {\n        return 'Unknown';\n    }\n\n    const includeDate: boolean = alwaysIncludeDate || Date.now() / 1000 - timestamp > 86400;\n    const date = new Date(timestamp * 1000);\n    const zone = new Date().toLocaleTimeString('en-us', { timeZoneName: 'short' }).split(' ')[2];\n\n    /* FIXME: Detect browsers for people that don't get how calenders work */\n    return (\n        (includeDate\n            ? `${padNumber(date.getDate())}-${padNumber(date.getMonth() + 1)}-${padNumber(date.getFullYear())} `\n            : '') +\n        `${padNumber(date.getHours())}:${padNumber(date.getMinutes())}:${padNumber(date.getSeconds())} ${zone}`\n    );\n};\n\nexport const formatTimeDiff = (timestamp1?: number, timestamp2?: number, useSeconds?: boolean): [number | string, string | undefined] => {\n    if (timestamp1 === undefined || timestamp1 === null || timestamp2 === undefined) {\n        return ['Unknown', undefined];\n    }\n\n    const timeDiff = timestamp2 - timestamp1;\n\n    if (timeDiff < 60) {\n        return useSeconds ? [timeDiff, 'second'] : ['<1', 'minute'];\n    }\n    if (timeDiff < 3600) {\n        return [Math.round(timeDiff / 60), 'minute'];\n    }\n    if (timeDiff < 86400) {\n        return [Math.round(timeDiff / 3600), 'hour'];\n    }\n    if (timeDiff < 604800) {\n        return [Math.round(timeDiff / 86400), 'day'];\n    }\n    if (timeDiff < 2592000) {\n        return [Math.round(timeDiff / 604800), 'week'];\n    }\n    if (timeDiff < 220752000) {\n        return [Math.round(timeDiff / 2592000), 'month'];\n    }\n    return [Math.round(timeDiff / 220752000), 'year'];\n};\n\nexport const formatTimeDiffToString = (timestamp1?: number, timestamp2?: number, useSeconds?: boolean): string => {\n    const unformatted = formatTimeDiff(timestamp1, timestamp2, useSeconds);\n    return unformatted[0].toString() + ' ' + unformatted[1] + (unformatted[0] !== 1 ? 's' : '');\n}\n\nexport const formatTimeSince = (timestamp?: number): [number | string, string | undefined] => {\n    return formatTimeDiff(timestamp, Date.now() / 1000);\n};\n","module.exports = __webpack_public_path__ + \"static/media/loading.e7224f88.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2Y63x\",\"label\":\"Cell_label__3ePW_\",\"sunkenLabel\":\"Cell_sunkenLabel__3CcxM\",\"largelabel\":\"Cell_largelabel__24-9K\",\"info\":\"Cell_info__1BKSq\",\"mono\":\"Cell_mono__3WhQB\",\"dimmedValue\":\"Cell_dimmedValue__1W1mr\",\"decimals\":\"Cell_decimals__1fWGM\",\"unit\":\"Cell_unit__31Wzf\",\"loading\":\"Cell_loading__3bY5H\",\"link\":\"Cell_link__oj9kk\",\"accentuatedLink\":\"Cell_accentuatedLink__4FSBT\",\"normalCell\":\"Cell_normalCell__2ayJT\",\"lighterCell\":\"Cell_lighterCell__3JIpK\",\"lightCell\":\"Cell_lightCell__2_HD7\",\"darkerCell\":\"Cell_darkerCell__3UGjH\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Cell } from '../Cell/Cell.component';\n\nimport { IRow } from 'interfaces/IRow.interface';\n\nimport classes from './Row.module.scss';\n\nexport const Row: React.FC<IRow> = ({ label, labelWidth, labelSubText, labelSubTextLink, cells, wide, extrawide }) => {\n    const getLabelStyle = (width?: string): React.CSSProperties => {\n        var style: React.CSSProperties = {};\n\n        if (width) {\n            style.width = width;\n        }\n\n        return style;\n    };\n\n    var hasCellLabels: boolean = false;\n\n    cells.forEach((cell) => {\n        if (cell.label !== undefined) {\n            hasCellLabels = true;\n        }\n    });\n\n    return (\n        <div\n            className={`\n        ${classes.row} ${extrawide ? classes.verticalExtraPaddedRow : hasCellLabels || wide ? classes.verticalPaddedRow : ''}`}\n        >\n            <h3\n                className={`${classes.label} ${hasCellLabels ? classes.verticalPaddedLabel : ''} ${\n                    wide ? classes.wideRowLabel : ''\n                }`}\n                style={getLabelStyle(labelWidth)}\n            >\n                {label}\n                {labelSubText ? (\n                    <>\n                        <br />\n                        <span className={classes.labelSubText}>\n                        {labelSubTextLink ? (\n                            <Link to={labelSubTextLink}>{labelSubText}</Link>\n                        ) : labelSubText}\n                        </span>\n                    </>\n                ) : undefined}\n            </h3>\n            {cells.map((cell, index) => (\n                <Cell key={index} {...cell} />\n            ))}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__2Lsla\",\"label\":\"Row_label__9CPRA\",\"labelSubText\":\"Row_labelSubText__2Zx8n\",\"wideRowLabel\":\"Row_wideRowLabel__1zVT8\",\"verticalPaddedLabel\":\"Row_verticalPaddedLabel__3Mktc\",\"verticalPaddedRow\":\"Row_verticalPaddedRow__Lq_vu\",\"verticalExtraPaddedRow\":\"Row_verticalExtraPaddedRow__2w870\"};"],"sourceRoot":""}