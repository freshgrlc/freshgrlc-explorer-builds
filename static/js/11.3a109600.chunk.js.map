{"version":3,"sources":["components/TabBar/TabBar.component.tsx","components/TabBar/TabBar.module.scss","components/DifficultyGraphView/DifficultyGraphView.module.scss","components/DifficultyGraphView/DifficultyGraphView.component.tsx","utils/getBaseUrl.util.ts","utils/getCoinInfo.util.ts","components/Section/Section.component.tsx","components/Section/Section.module.scss","components/Banner/FreshGRLCBanner/FreshGRLCBanner.module.scss","components/Banner/CoinSelector/CoinSelector.module.scss","components/Banner/SearchBar/SearchBar.module.scss","components/Banner/FreshGRLCBanner/FreshGRLCBanner.component.tsx","components/Banner/CoinSelector/CoinSelector.component.tsx","components/Banner/SearchBar/SearchBar.component.tsx","components/Banner/Banner.component.tsx","components/PageLoadAnimation/PageLoadAnimation.component.tsx","components/PageLoadAnimation/PageLoadAnimation.module.scss","assets/loading_large.svg"],"names":["TabBar","options","selected","parameterName","baseUrl","disabled","className","classes","wrapper","navigation","map","option","index","key","optionWrapper","separator","undefined","name","displayName","disabledLink","to","module","exports","PeriodTime","hours","day","week","month","year","PeriodDatapoints","PeriodDescription","DifficultyGraphView","routeParams","queryParams","getBaseUrl","coin","coinInfo","getCoinInfo","period","Object","keys","indexOf","useState","series1","setSeries1","useFetch","targetDataPoints","blockTime","blocks","Math","floor","interval","ceil","limit","getUrlForSeries","series1Data","data","isLoading","useEffect","entry","x","firstseen","timestamp","y","difficulty","highchartsData","setHighchartsData","chart","type","backgroundColor","height","width","title","text","toLowerCase","style","color","fontSize","plotOptions","series","xAxis","labels","lineColor","tickColor","yAxis","gridLineColor","legend","enabled","coins","getAllCoins","preferredCoin","ticker","header","description","outerWrapper","highcharts","Highcharts","Coins","displaySymbol","blockReward","logo","filter","Section","children","pagesection","sectionheader","FreshGRLCBanner","subdomain","subtitle","subtext","banner","makeCoinsUrl","join","CoinSelector","coinSelector","Fragment","selectableCoin","href","SearchBar","searchFieldValue","updateSearchField","searchObject","setSearchObject","setLoading","isError","setError","searchResults","setSearchResults","selectedObject","setSelectedObject","redirectUrl","redirectTo","Promise","all","a","fetch","json","then","results","result","network","length","filtered","hasOwnProperty","transaction","txid","block","hash","address","Form","searchbar","onSubmit","trim","Input","size","placeholder","loading","error","value","onChange","e","target","push","Banner","selectableCoins","PageLoadAnimation","pageLoad","inner","src","alt"],"mappings":"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","file":"static/js/11.3a109600.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ITabBarOption } from 'interfaces/ITabBarOption.interface';\n\nimport classes from './TabBar.module.scss';\n\ninterface IProps {\n    options: ITabBarOption[];\n    selected?: string;\n    parameterName?: string;\n    baseUrl: string;\n    disabled?: boolean;\n}\n\nexport const TabBar: React.FC<IProps> = ({ options, selected, parameterName, baseUrl, disabled }) => {\n    if (!parameterName) {\n        parameterName = 'show'\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.navigation}>\n                {options.map((option, index) => (\n                    <div key={index} className={classes.optionWrapper}>\n                        {index !== 0 ? (\n                            <span className={classes.separator}>·</span>\n                        ) : undefined}\n                        {option.name === selected ? (\n                            <span className={classes.option}>{option.displayName}</span>\n                        ) : disabled ? (\n                            <span className={classes.option + ' ' + classes.disabledLink}>{option.displayName}</span>\n                        ) : (\n                            <Link className={classes.option} to={`${baseUrl}?${parameterName}=${option.name}`}>{option.displayName}</Link>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TabBar_wrapper__3LCso\",\"navigation\":\"TabBar_navigation__1FL6d\",\"option\":\"TabBar_option__2svvx\",\"optionWrapper\":\"TabBar_optionWrapper__2sKsS\",\"disabledLink\":\"TabBar_disabledLink__BezXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerWrapper\":\"DifficultyGraphView_outerWrapper__t58oD\",\"wrapper\":\"DifficultyGraphView_wrapper__2wufu\",\"description\":\"DifficultyGraphView_description__17cdG\"};","import React, { useEffect, useState } from 'react';\nimport useFetch from 'react-fetch-hook';\n\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nimport { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\nimport { getCoinInfo, getAllCoins } from 'utils/getCoinInfo.util';\n\nimport { IBlock } from 'interfaces/IBlock.interface';\n\nimport { Banner } from 'components/Banner/Banner.component';\nimport { Section } from 'components/Section/Section.component';\nimport { TabBar } from 'components/TabBar/TabBar.component';\nimport { PageLoadAnimation } from 'components/PageLoadAnimation/PageLoadAnimation.component';\n\nimport classes from './DifficultyGraphView.module.scss';\n\n\ntype Period = 'day' | 'week' | 'month' | 'year';\n\ninterface IProps {\n    routeParams: {\n        coin: CoinTickerSymbol;\n    };\n    queryParams: {\n        period?: Period;\n    }\n}\n\ninterface ISeriesEntry {\n    x: number;\n    y: number;\n};\n\nconst PeriodTime: { [key: string]: number } = {\n    hours: 28800,\n    day: 86400,\n    week: 604800,\n    month: 2592000,\n    year: 31104000\n};\n\nconst TARGET_DATAPOINTS = 300;\nconst PeriodDatapoints: { [key: string]: number } = {\n    hours: 1000,    /* Extra precise */\n    day: TARGET_DATAPOINTS,\n    week: TARGET_DATAPOINTS,\n    month: TARGET_DATAPOINTS,\n    year: TARGET_DATAPOINTS\n};\n\nconst PeriodDescription: { [key: string]: string } = {\n    hours: 'Last 8 hours',\n    day: 'Last 24 hours',\n    week: 'Last week',\n    month: 'Last month',\n    year: 'Last 12 months'\n};\n\nexport const DifficultyGraphView: React.FC<IProps> = ({ routeParams, queryParams }) => {\n    const baseUrl = getBaseUrl(routeParams.coin);\n    const coinInfo = getCoinInfo(routeParams.coin);\n\n    if (!queryParams.period || Object.keys(PeriodTime).indexOf(queryParams.period) < 0) {\n        queryParams.period = 'month';\n    }\n\n    const getUrlForSeries = (period: number, targetDataPoints: number): string => {\n        const blockTime = coinInfo.blockTime + 1;\n        const blocks = Math.floor(period / blockTime);\n        const interval = Math.ceil(blocks/targetDataPoints);\n        const limit = Math.floor(blocks / interval);\n        return `${baseUrl}/blocks/?start=${-blocks}&limit=${limit}&interval=${interval}`;\n    };\n    const convertRawData = (rawData: IBlock[]): ISeriesEntry[] => (\n        rawData.map(entry => ({\n            x: (entry.firstseen ? entry.firstseen : entry.timestamp) * 1000,\n            y: entry.difficulty\n        }))\n    );\n\n    const [ series1, setSeries1 ] = useState<ISeriesEntry[] | undefined>(undefined);\n    const { data: series1Data, isLoading } = useFetch<IBlock[]>(getUrlForSeries(PeriodTime[queryParams.period], PeriodDatapoints[queryParams.period]));\n    useEffect(() => {\n        setSeries1(series1Data ? convertRawData(series1Data) : undefined);\n    }, [series1Data]);\n\n    /*\n    const [ series2, setSeries2 ] = useState<ISeriesEntry[] | undefined>(undefined);\n    const { data: series2Data } = useFetch<IBlock[]>(getUrlForSeries(PeriodTime[queryParams.period], 1000));\n    useEffect(() => {\n        setSeries2(series2Data ? convertRawData(series2Data) : undefined);\n    }, [series2Data]);\n    */\n\n    const [ highchartsData, setHighchartsData ] = useState<any | undefined>(undefined);\n    useEffect(() => {\n        setHighchartsData(!series1 ? undefined : {\n            chart: {\n                type: 'line',\n                backgroundColor: '#2e2c29',\n                height: 600,\n                width: 1100\n            },\n            title: {\n                text: `Mining difficulty (${PeriodDescription[queryParams.period as Period].toLowerCase()})`,\n                style: {\n                    color: '#ffa71a',\n                    fontSize: '24px'\n                }\n            },\n            plotOptions: {\n            },\n            series: [{\n            /*\n                data: series2,\n                color: 'rgba(255, 226, 179, 0.87)'\n            }, {\n            */\n                data: series1,\n                color: '#ffa71a'\n            }],\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: 'Time (UTC)',\n                    style: {\n                        color: '#ffa71a',\n                        fontSize: '1.25em'\n                    }\n                },\n                labels: {\n                    style: {\n                        color: 'rgba(255, 226, 179, 0.87)',\n                    }\n                },\n                lineColor: '#696051',\n                tickColor: '#696051'\n            },\n            yAxis: {\n                title: {\n                    text: 'Difficulty',\n                    style: {\n                        color: '#ffa71a',\n                        fontSize: '1.25em'\n                    }\n                },\n                labels: {\n                    style: {\n                        color: 'rgba(255, 226, 179, 0.87)',\n                    }\n                },\n                gridLineColor: '#696051'\n            },\n            legend: {\n                enabled: false\n            }\n        });\n    }, [queryParams, series1 /*, series2 */]);\n\n    return (\n        <>\n            <Banner coins={getAllCoins()} preferredCoin={coinInfo ? coinInfo.ticker : undefined} />\n            <Section header=\"Historical network difficulty\">\n                <p className={classes.description}></p>\n                <TabBar\n                    options={Object.keys(PeriodDescription).map(name => ({\n                        name: name,\n                        displayName: PeriodDescription[name]\n                    }))}\n                    selected={queryParams.period}\n                    parameterName=\"period\"\n                    baseUrl={`/${coinInfo.ticker}/difficultygraphs`}\n                    disabled={isLoading}\n                />\n                {!isLoading && highchartsData ? (\n                    <div className={classes.outerWrapper}>\n                        <div className={classes.wrapper}>\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                options={highchartsData}\n                            />\n                        </div>\n                    </div>\n                ) : (\n                    <PageLoadAnimation />\n                )}\n            </Section>\n        </>\n    );\n};\n","import { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nexport const getBaseUrl = (ticker: CoinTickerSymbol) => `https://api.freshgrlc.net/blockchain/${ticker}`;\n","import { CoinTickerSymbol, ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nconst Coins: ICoinInfo[] = [\n    {\n        ticker: 'grlc',\n        name: 'garlicoin',\n        displayName: 'Garlicoin',\n        displaySymbol: 'GRLC',\n        blockTime: 40,\n        blockReward: 25,\n        logo: 'garlicoin.svg',\n    },\n    {\n        ticker: 'tux',\n        name: 'tuxcoin',\n        displayName: 'Tuxcoin',\n        displaySymbol: 'TUX',\n        blockTime: 60,\n        blockReward: 33.5,\n        logo: 'tuxcoin.svg',\n    },\n    {\n        ticker: 'tgrlc',\n        name: 'garlicoin-testnet',\n        displayName: 'Garlicoin testnet',\n        displaySymbol: 'tGRLC',\n        blockTime: 40,\n        blockReward: 50,\n        logo: 'garlicoin.svg',\n    },\n];\n\nexport const getCoinInfo = (ticker: CoinTickerSymbol): ICoinInfo => {\n    return Coins.filter((coin) => coin.ticker === ticker)[0];\n};\n\nexport const getAllCoins = () => Coins;\n","import React from 'react';\n\nimport classes from './Section.module.scss';\n\ninterface IProps {\n    children?: any;\n    header?: string;\n}\n\nexport const Section: React.FC<IProps> = ({ children, header }) => {\n    return (\n        <div className={classes.pagesection}>\n            {header ? <h2 className={classes.sectionheader}>{header}</h2> : null}\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesection\":\"Section_pagesection__NIoLc\",\"sectionheader\":\"Section_sectionheader__1msZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"FreshGRLCBanner_banner__GV84b\",\"subdomain\":\"FreshGRLCBanner_subdomain__PJy6_\",\"subtext\":\"FreshGRLCBanner_subtext___Qo5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coinSelector\":\"CoinSelector_coinSelector__2igoQ\",\"separator\":\"CoinSelector_separator__3R6Lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__SqBc-\"};","import React from 'react';\n\nimport classes from './FreshGRLCBanner.module.scss';\n\n\ninterface IProps {\n    title?: string,\n    subdomain?: string,\n    subtitle?: string,\n    subtext?: string | JSX.Element\n}\n\nexport const FreshGRLCBanner: React.FC<IProps> = function({ title, subdomain, subtitle, subtext }) {\n    title = title ? title : 'FreshGRLC.NET';\n    return (\n        <div className={classes.banner}>\n            <h1>{ subdomain ? (<span className={classes.subdomain}>{subdomain}.</span>) : ''}{title}</h1>\n            { subtitle ? (<h2>{subtitle}</h2>) : undefined}\n            { subtext ? (<div className={classes.subtext}>{subtext}</div>) : undefined}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport classes from './CoinSelector.module.scss';\n\ninterface ICombinedCoins {\n    name: string;\n    coins: CoinTickerSymbol[];\n};\n\nexport type SingleOrCombinedCoin = ICoinInfo | ICombinedCoins;\n\ninterface IProps {\n    coins: SingleOrCombinedCoin[];\n}\n\nconst makeCoinsUrl = (coin: ICoinInfo | ICombinedCoins): string => {\n    const combinedCoins = coin as ICombinedCoins;\n    if (combinedCoins !== undefined && combinedCoins.coins !== undefined) {\n        const combinedCoins = coin as ICombinedCoins;\n        return combinedCoins.coins.join('+');\n    }\n    return (coin as ICoinInfo).ticker;\n};\n\nexport const CoinSelector: React.FC<IProps> = function({ coins }) {\n    return (\n        <div className={classes.coinSelector}>\n            Show information for:\n            {\n                coins.map((coin, index) => (\n                    <React.Fragment key={index}>\n                        {index ? (<span className={classes.separator}>{'\\u25CF'}</span>) : ''}\n                        <a className={classes.selectableCoin} href={`/${makeCoinsUrl(coin)}/home/`}>{coin.name}</a>\n                    </React.Fragment>\n                ))\n            }\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form } from 'semantic-ui-react';\n\nimport { IAddressInfo } from 'interfaces/IAddressInfo.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IBlockTransaction } from 'interfaces/ITransaction.interface';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\n\nimport classes from './SearchBar.module.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\ntype ISearchResult = IBlock | IBlockTransaction | IAddressInfo | null;\n\ninterface ISearchResultWithContext {\n    result: ISearchResult;\n    network: CoinTickerSymbol;\n}\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const SearchBar: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const [searchFieldValue, updateSearchField] = useState<string>('');\n    const [searchObject, setSearchObject] = useState<string>('');\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [isError, setError] = useState<boolean>(false);\n    const [searchResults, setSearchResults] = useState<ISearchResultWithContext[] | undefined>(undefined);\n    const [selectedObject, setSelectedObject] = useState<ISearchResultWithContext | undefined>(undefined);\n    const [redirectUrl, redirectTo] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        setError(false);\n    }, [searchFieldValue]);\n\n    useEffect(() => {\n        if (searchObject === '') {\n            setLoading(false);\n            return;\n        }\n\n        setLoading(true);\n        Promise.all(\n            coins.map(\n                async (coin) =>\n                    (await fetch(`${getBaseUrl(coin.ticker)}/search/${searchObject}`)).json() as Promise<ISearchResult>\n            )\n        )\n            .then((results) =>\n                results\n                    .map((result, index) => {\n                        return {\n                            result: result,\n                            network: coins[index].ticker,\n                        };\n                    })\n                    .filter((result) => result.result !== null)\n            )\n            .then(setSearchResults);\n    }, [coins, searchObject]);\n\n    useEffect(() => {\n        setLoading(false);\n        if (searchResults === undefined) return;\n\n        if (searchResults.length === 0) {\n            setError(true);\n            return;\n        }\n\n        if (searchResults.length > 1 && preferredCoin !== undefined) {\n            const filtered = searchResults.filter((result) => result.network === preferredCoin);\n            if (filtered.length > 0) {\n                setSelectedObject(filtered[0]);\n                return;\n            }\n        }\n\n        setSelectedObject(searchResults[0]);\n    }, [searchResults, preferredCoin]);\n\n    useEffect(() => {\n        if (selectedObject === undefined || selectedObject.result === null) return;\n\n        if (selectedObject.result.hasOwnProperty('txid')) {\n            const transaction = selectedObject.result as IBlockTransaction;\n            redirectTo(`/${selectedObject.network}/transactions/${transaction.txid}`);\n        } else if (selectedObject.result.hasOwnProperty('hash')) {\n            const block = selectedObject.result as IBlock;\n            redirectTo(`/${selectedObject.network}/blocks/${block.hash}`);\n        } else {\n            const address = selectedObject.result as IAddressInfo;\n            redirectTo(`/${selectedObject.network}/address/${address.address}`);\n        }\n    }, [selectedObject]);\n\n    /* FIXME */\n    return redirectUrl === undefined ? (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    ) : (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Redirect push to={redirectUrl} />\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { FreshGRLCBanner } from './FreshGRLCBanner/FreshGRLCBanner.component';\nimport { CoinSelector, SingleOrCombinedCoin } from './CoinSelector/CoinSelector.component';\nimport { SearchBar } from './SearchBar/SearchBar.component';\n\nimport { getCoinInfo } from 'utils/getCoinInfo.util';\n\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const Banner: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const selectableCoins: SingleOrCombinedCoin[] = [\n        getCoinInfo('grlc'),\n        getCoinInfo('tux'),\n        { name: '(both)', coins: ['grlc', 'tux'] },\n        getCoinInfo('tgrlc')\n    ];\n    return (\n        <FreshGRLCBanner subdomain=\"explorer\" subtitle=\"Multi-Blockchain Explorer\" subtext={(\n            <>\n                <CoinSelector coins={selectableCoins} />\n                <SearchBar coins={coins} preferredCoin={preferredCoin} />\n            </>\n        )}/>\n    );\n};\n","import React from 'react';\n\nimport classes from './PageLoadAnimation.module.scss';\n\nimport loading from 'assets/loading_large.svg';\n\nexport const PageLoadAnimation: React.FC = () => {\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.pageLoad}>\n                <div className={classes.inner}>\n                    <img src={loading} alt=\"\" />\n                    <h3>Loading...</h3>\n                </div>\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageLoadAnimation_wrapper__3xAcH\",\"pageLoad\":\"PageLoadAnimation_pageLoad__3wwZ4\",\"inner\":\"PageLoadAnimation_inner__1QFe0\"};","module.exports = __webpack_public_path__ + \"static/media/loading_large.346688c2.svg\";"],"sourceRoot":""}