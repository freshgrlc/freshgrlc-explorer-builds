{"version":3,"sources":["components/TabBar/TabBar.component.tsx","components/TabBar/TabBar.module.scss","components/PoolDistributionView/PoolDistributionView.module.scss","components/PoolDistributionView/PoolDistributionView.component.tsx","utils/getBaseUrl.util.ts","utils/getCoinInfo.util.ts","components/Section/Section.component.tsx","components/Section/Section.module.scss","components/Banner/FreshGRLCBanner/FreshGRLCBanner.module.scss","components/Banner/CoinSelector/CoinSelector.module.scss","components/Banner/SearchBar/SearchBar.module.scss","components/Banner/FreshGRLCBanner/FreshGRLCBanner.component.tsx","components/Banner/CoinSelector/CoinSelector.component.tsx","components/Banner/SearchBar/SearchBar.component.tsx","components/Banner/Banner.component.tsx","components/PageLoadAnimation/PageLoadAnimation.component.tsx","components/PageLoadAnimation/PageLoadAnimation.module.scss","assets/loading_large.svg"],"names":["TabBar","options","selected","parameterName","baseUrl","disabled","className","classes","wrapper","navigation","map","option","index","key","optionWrapper","separator","undefined","name","displayName","disabledLink","to","module","exports","PeriodTime","day","week","month","year","alltime","PeriodDescription","PoolDistributionView","routeParams","queryParams","getBaseUrl","coin","coinInfo","getCoinInfo","period","Object","keys","indexOf","useState","sinceTimestamp","setSinceTimestamp","useEffect","Math","floor","Date","now","useFetch","depends","data","isLoading","highchartsData","setHighchartsData","chart","type","backgroundColor","height","width","title","text","style","color","fontSize","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","textOutline","fontWeight","colors","tooltip","pointFormat","series","entry","y","amountmined","sort","e1","e2","coins","getAllCoins","preferredCoin","ticker","header","description","outerWrapper","highcharts","Highcharts","Coins","displaySymbol","blockTime","blockReward","logo","filter","Section","children","pagesection","sectionheader","FreshGRLCBanner","subdomain","subtitle","subtext","banner","makeCoinsUrl","join","CoinSelector","coinSelector","Fragment","selectableCoin","href","SearchBar","searchFieldValue","updateSearchField","searchObject","setSearchObject","setLoading","isError","setError","searchResults","setSearchResults","selectedObject","setSelectedObject","redirectUrl","redirectTo","Promise","all","a","fetch","json","then","results","result","network","length","filtered","hasOwnProperty","transaction","txid","block","hash","address","Form","searchbar","onSubmit","trim","Input","size","placeholder","loading","error","value","onChange","e","target","push","Banner","selectableCoins","PageLoadAnimation","pageLoad","inner","src","alt"],"mappings":"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","file":"static/js/12.16f42282.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ITabBarOption } from 'interfaces/ITabBarOption.interface';\n\nimport classes from './TabBar.module.scss';\n\ninterface IProps {\n    options: ITabBarOption[];\n    selected?: string;\n    parameterName?: string;\n    baseUrl: string;\n    disabled?: boolean;\n}\n\nexport const TabBar: React.FC<IProps> = ({ options, selected, parameterName, baseUrl, disabled }) => {\n    if (!parameterName) {\n        parameterName = 'show'\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.navigation}>\n                {options.map((option, index) => (\n                    <div key={index} className={classes.optionWrapper}>\n                        {index !== 0 ? (\n                            <span className={classes.separator}>Â·</span>\n                        ) : undefined}\n                        {option.name === selected ? (\n                            <span className={classes.option}>{option.displayName}</span>\n                        ) : disabled ? (\n                            <span className={classes.option + ' ' + classes.disabledLink}>{option.displayName}</span>\n                        ) : (\n                            <Link className={classes.option} to={`${baseUrl}?${parameterName}=${option.name}`}>{option.displayName}</Link>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TabBar_wrapper__3LCso\",\"navigation\":\"TabBar_navigation__1FL6d\",\"option\":\"TabBar_option__2svvx\",\"optionWrapper\":\"TabBar_optionWrapper__2sKsS\",\"disabledLink\":\"TabBar_disabledLink__BezXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerWrapper\":\"PoolDistributionView_outerWrapper__Gqo-v\",\"wrapper\":\"PoolDistributionView_wrapper__3GHA9\",\"description\":\"PoolDistributionView_description__L4ZSE\"};","import React, { useEffect, useState } from 'react';\nimport useFetch from 'react-fetch-hook';\n\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nimport { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\nimport { getCoinInfo, getAllCoins } from 'utils/getCoinInfo.util';\n\nimport { IPoolStat } from 'interfaces/IPoolStat.interface';\n\nimport { Banner } from 'components/Banner/Banner.component';\nimport { Section } from 'components/Section/Section.component';\nimport { TabBar } from 'components/TabBar/TabBar.component';\nimport { PageLoadAnimation } from 'components/PageLoadAnimation/PageLoadAnimation.component';\n\nimport classes from './PoolDistributionView.module.scss';\n\n\ntype Period = 'day' | 'week' | 'month' | 'year' | 'alltime';\n\ninterface IProps {\n    routeParams: {\n        coin: CoinTickerSymbol;\n    };\n    queryParams: {\n        period?: Period;\n    }\n}\n\nconst PeriodTime: { [key: string]: number } = {\n    day: 86400,\n    week: 604800,\n    month: 2592000,\n    year: 31104000,\n    alltime: -1\n};\n\nconst PeriodDescription: { [key: string]: string } = {\n    day: 'Last 24 hours',\n    week: 'Last week',\n    month: 'Last month',\n    year: 'Last 12 months',\n    alltime: 'Since genesis block'\n};\n\nexport const PoolDistributionView: React.FC<IProps> = ({ routeParams, queryParams }) => {\n    const baseUrl = getBaseUrl(routeParams.coin);\n    const coinInfo = getCoinInfo(routeParams.coin);\n\n    if (!queryParams.period || Object.keys(PeriodTime).indexOf(queryParams.period) < 0) {\n        queryParams.period = 'week';\n    }\n\n    const [ sinceTimestamp, setSinceTimestamp ] = useState<number | undefined>(undefined);\n    useEffect(() => {\n        setSinceTimestamp(queryParams.period ? PeriodTime[queryParams.period] > 0 ? Math.floor(Date.now() / 1000) - PeriodTime[queryParams.period] : 0 : undefined);\n    }, [queryParams]);\n\n    const { data, isLoading } = useFetch<IPoolStat[]>(`${baseUrl}/poolstats/?since=${sinceTimestamp}`, {\n            depends: [sinceTimestamp !== undefined]\n        }\n    );\n\n    const [ highchartsData, setHighchartsData ] = useState<any | undefined>(undefined);\n    useEffect(() => {\n        setHighchartsData(!data ? undefined : {\n            chart: {\n                type: 'pie',\n                backgroundColor: '#2e2c29',\n                height: 600,\n                width: 1100\n            },\n            title: {\n                text: `Hashrate distribution (${PeriodDescription[queryParams.period as Period]})`,\n                style: {\n                    color: '#ffa71a',\n                    fontSize: '24px'\n                }\n            },\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: true,\n                        style: {\n                            backgroundColor: '#2e2c29',\n                            color: 'rgba(255, 226, 179, 0.87)',\n                            textOutline: '0px',\n                            fontWeight: 'normal',\n                            fontSize: '15px'\n                        }\n                    },\n                    colors: ['#4D4D4D', '#5DA5DA', '#FAA43A', '#60BD68', '#F17CB0', '#B2912F', '#B276B2', '#DECF3F', '#F15854']\n                }\n            },\n            tooltip: {\n                pointFormat: '<b>{point.y} blocks mined</b> ({point.percentage:.1f}%)',\n            },\n            series: [{\n                data: data.map(entry => ({\n                    name: entry.name,\n                    y: entry.amountmined\n                })).sort((e1, e2) => e1.y > e2.y ? -1 : 1)\n            }]\n        });\n    }, [data, queryParams]);\n\n    return (\n        <>\n            <Banner coins={getAllCoins()} preferredCoin={coinInfo ? coinInfo.ticker : undefined} />\n            <Section header=\"Hashrate distribution across mining pools\">\n                <p className={classes.description}>\n                    Shows the average hashrate distribution across mining pools based on the blocks found by them during a certain time period.\n                    Note that for smaller pools this might be less precise as the data might be skewed due to the pool's luck.\n                </p>\n                <TabBar\n                    options={Object.keys(PeriodDescription).map(name => ({\n                        name: name,\n                        displayName: PeriodDescription[name]\n                    }))}\n                    selected={queryParams.period}\n                    parameterName=\"period\"\n                    baseUrl={`/${coinInfo.ticker}/pooldistribution`}\n                />\n                {!isLoading && highchartsData ? (\n                    <div className={classes.outerWrapper}>\n                        <div className={classes.wrapper}>\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                options={highchartsData}\n                            />\n                        </div>\n                    </div>\n                ) : (\n                    <PageLoadAnimation />\n                )}\n            </Section>\n        </>\n    );\n};\n","import { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nexport const getBaseUrl = (ticker: CoinTickerSymbol) => `https://api.freshgrlc.net/blockchain/${ticker}`;\n","import { CoinTickerSymbol, ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nconst Coins: ICoinInfo[] = [\n    {\n        ticker: 'grlc',\n        name: 'garlicoin',\n        displayName: 'Garlicoin',\n        displaySymbol: 'GRLC',\n        blockTime: 40,\n        blockReward: 25,\n        logo: 'garlicoin.svg',\n    },\n    {\n        ticker: 'tux',\n        name: 'tuxcoin',\n        displayName: 'Tuxcoin',\n        displaySymbol: 'TUX',\n        blockTime: 60,\n        blockReward: 33.5,\n        logo: 'tuxcoin.svg',\n    },\n    {\n        ticker: 'tgrlc',\n        name: 'garlicoin-testnet',\n        displayName: 'Garlicoin testnet',\n        displaySymbol: 'tGRLC',\n        blockTime: 40,\n        blockReward: 50,\n        logo: 'garlicoin.svg',\n    },\n];\n\nexport const getCoinInfo = (ticker: CoinTickerSymbol): ICoinInfo => {\n    return Coins.filter((coin) => coin.ticker === ticker)[0];\n};\n\nexport const getAllCoins = () => Coins;\n","import React from 'react';\n\nimport classes from './Section.module.scss';\n\ninterface IProps {\n    children?: any;\n    header?: string;\n}\n\nexport const Section: React.FC<IProps> = ({ children, header }) => {\n    return (\n        <div className={classes.pagesection}>\n            {header ? <h2 className={classes.sectionheader}>{header}</h2> : null}\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesection\":\"Section_pagesection__NIoLc\",\"sectionheader\":\"Section_sectionheader__1msZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"FreshGRLCBanner_banner__GV84b\",\"subdomain\":\"FreshGRLCBanner_subdomain__PJy6_\",\"subtext\":\"FreshGRLCBanner_subtext___Qo5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coinSelector\":\"CoinSelector_coinSelector__2igoQ\",\"separator\":\"CoinSelector_separator__3R6Lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__SqBc-\"};","import React from 'react';\n\nimport classes from './FreshGRLCBanner.module.scss';\n\n\ninterface IProps {\n    title?: string,\n    subdomain?: string,\n    subtitle?: string,\n    subtext?: string | JSX.Element\n}\n\nexport const FreshGRLCBanner: React.FC<IProps> = function({ title, subdomain, subtitle, subtext }) {\n    title = title ? title : 'FreshGRLC.NET';\n    return (\n        <div className={classes.banner}>\n            <h1>{ subdomain ? (<span className={classes.subdomain}>{subdomain}.</span>) : ''}{title}</h1>\n            { subtitle ? (<h2>{subtitle}</h2>) : undefined}\n            { subtext ? (<div className={classes.subtext}>{subtext}</div>) : undefined}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport classes from './CoinSelector.module.scss';\n\ninterface ICombinedCoins {\n    name: string;\n    coins: CoinTickerSymbol[];\n};\n\nexport type SingleOrCombinedCoin = ICoinInfo | ICombinedCoins;\n\ninterface IProps {\n    coins: SingleOrCombinedCoin[];\n}\n\nconst makeCoinsUrl = (coin: ICoinInfo | ICombinedCoins): string => {\n    const combinedCoins = coin as ICombinedCoins;\n    if (combinedCoins !== undefined && combinedCoins.coins !== undefined) {\n        const combinedCoins = coin as ICombinedCoins;\n        return combinedCoins.coins.join('+');\n    }\n    return (coin as ICoinInfo).ticker;\n};\n\nexport const CoinSelector: React.FC<IProps> = function({ coins }) {\n    return (\n        <div className={classes.coinSelector}>\n            Show information for:\n            {\n                coins.map((coin, index) => (\n                    <React.Fragment key={index}>\n                        {index ? (<span className={classes.separator}>{'\\u25CF'}</span>) : ''}\n                        <a className={classes.selectableCoin} href={`/${makeCoinsUrl(coin)}/home/`}>{coin.name}</a>\n                    </React.Fragment>\n                ))\n            }\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form } from 'semantic-ui-react';\n\nimport { IAddressInfo } from 'interfaces/IAddressInfo.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IBlockTransaction } from 'interfaces/ITransaction.interface';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\n\nimport classes from './SearchBar.module.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\ntype ISearchResult = IBlock | IBlockTransaction | IAddressInfo | null;\n\ninterface ISearchResultWithContext {\n    result: ISearchResult;\n    network: CoinTickerSymbol;\n}\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const SearchBar: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const [searchFieldValue, updateSearchField] = useState<string>('');\n    const [searchObject, setSearchObject] = useState<string>('');\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [isError, setError] = useState<boolean>(false);\n    const [searchResults, setSearchResults] = useState<ISearchResultWithContext[] | undefined>(undefined);\n    const [selectedObject, setSelectedObject] = useState<ISearchResultWithContext | undefined>(undefined);\n    const [redirectUrl, redirectTo] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        setError(false);\n    }, [searchFieldValue]);\n\n    useEffect(() => {\n        if (searchObject === '') {\n            setLoading(false);\n            return;\n        }\n\n        setLoading(true);\n        Promise.all(\n            coins.map(\n                async (coin) =>\n                    (await fetch(`${getBaseUrl(coin.ticker)}/search/${searchObject}`)).json() as Promise<ISearchResult>\n            )\n        )\n            .then((results) =>\n                results\n                    .map((result, index) => {\n                        return {\n                            result: result,\n                            network: coins[index].ticker,\n                        };\n                    })\n                    .filter((result) => result.result !== null)\n            )\n            .then(setSearchResults);\n    }, [coins, searchObject]);\n\n    useEffect(() => {\n        setLoading(false);\n        if (searchResults === undefined) return;\n\n        if (searchResults.length === 0) {\n            setError(true);\n            return;\n        }\n\n        if (searchResults.length > 1 && preferredCoin !== undefined) {\n            const filtered = searchResults.filter((result) => result.network === preferredCoin);\n            if (filtered.length > 0) {\n                setSelectedObject(filtered[0]);\n                return;\n            }\n        }\n\n        setSelectedObject(searchResults[0]);\n    }, [searchResults, preferredCoin]);\n\n    useEffect(() => {\n        if (selectedObject === undefined || selectedObject.result === null) return;\n\n        if (selectedObject.result.hasOwnProperty('txid')) {\n            const transaction = selectedObject.result as IBlockTransaction;\n            redirectTo(`/${selectedObject.network}/transactions/${transaction.txid}`);\n        } else if (selectedObject.result.hasOwnProperty('hash')) {\n            const block = selectedObject.result as IBlock;\n            redirectTo(`/${selectedObject.network}/blocks/${block.hash}`);\n        } else {\n            const address = selectedObject.result as IAddressInfo;\n            redirectTo(`/${selectedObject.network}/address/${address.address}`);\n        }\n    }, [selectedObject]);\n\n    /* FIXME */\n    return redirectUrl === undefined ? (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    ) : (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Redirect push to={redirectUrl} />\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { FreshGRLCBanner } from './FreshGRLCBanner/FreshGRLCBanner.component';\nimport { CoinSelector, SingleOrCombinedCoin } from './CoinSelector/CoinSelector.component';\nimport { SearchBar } from './SearchBar/SearchBar.component';\n\nimport { getCoinInfo } from 'utils/getCoinInfo.util';\n\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const Banner: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const selectableCoins: SingleOrCombinedCoin[] = [\n        getCoinInfo('grlc'),\n        getCoinInfo('tux'),\n        { name: '(both)', coins: ['grlc', 'tux'] },\n        getCoinInfo('tgrlc')\n    ];\n    return (\n        <FreshGRLCBanner subdomain=\"explorer\" subtitle=\"Multi-Blockchain Explorer\" subtext={(\n            <>\n                <CoinSelector coins={selectableCoins} />\n                <SearchBar coins={coins} preferredCoin={preferredCoin} />\n            </>\n        )}/>\n    );\n};\n","import React from 'react';\n\nimport classes from './PageLoadAnimation.module.scss';\n\nimport loading from 'assets/loading_large.svg';\n\nexport const PageLoadAnimation: React.FC = () => {\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.pageLoad}>\n                <div className={classes.inner}>\n                    <img src={loading} alt=\"\" />\n                    <h3>Loading...</h3>\n                </div>\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageLoadAnimation_wrapper__3xAcH\",\"pageLoad\":\"PageLoadAnimation_pageLoad__3wwZ4\",\"inner\":\"PageLoadAnimation_inner__1QFe0\"};","module.exports = __webpack_public_path__ + \"static/media/loading_large.346688c2.svg\";"],"sourceRoot":""}