{"version":3,"sources":["components/BlocksListView/BlockSummary/BlockSummary.module.scss","components/BlocksListView/BlockListNavigation/BlockListNavigation.module.scss","components/BlocksListView/BlocksListView.module.scss","components/BlocksListView/BlockSummary/BlockSummary.component.tsx","components/BlocksListView/BlockListNavigation/BlockListNavigation.component.tsx","components/BlocksListView/BlocksListView.component.tsx","context/CoinInfo.context.ts","utils/getBaseUrl.util.ts","utils/getCoinInfo.util.ts","components/Section/Section.component.tsx","components/Section/Section.module.scss","components/Cell/Cell.component.tsx","components/Banner/FreshGRLCBanner/FreshGRLCBanner.module.scss","components/Banner/CoinSelector/CoinSelector.module.scss","components/Banner/SearchBar/SearchBar.module.scss","components/Banner/FreshGRLCBanner/FreshGRLCBanner.component.tsx","components/Banner/CoinSelector/CoinSelector.component.tsx","components/Banner/SearchBar/SearchBar.component.tsx","components/Banner/Banner.component.tsx","utils/formatNumericalValue.util.tsx","components/PageLoadAnimation/PageLoadAnimation.component.tsx","components/PageLoadAnimation/PageLoadAnimation.module.scss","assets/loading_large.svg","utils/padNumber.util.ts","utils/formatTime.util.ts","assets/loading.gif","components/Cell/Cell.module.scss"],"names":["module","exports","BlockSummary","isAddressMiner","minerName","minerLink","block","first","highlighted","coinInfo","useContext","CoinInfoContext","minerLinkExternal","miner","name","indexOf","split","ticker","website","className","classes","blocksummary","label","undefined","largelabel","data","formatTime","firstseen","timestamp","cellStyle","size","height","link","hash","linkColor","transactions","length","dataNotImportant","totaltransacted","unit","displaySymbol","alwaysSingular","decimals","align","spacer","notMono","externalLink","BlockListNavigation","reverseDirection","blocksPerPage","currentHighest","currentLowest","makeLink","backwards","newStart","linkBackward","linkForward","labelBackward","labelForward","navigation","to","separator","BlocksListView","routeParams","queryParams","baseUrl","getBaseUrl","coin","getCoinInfo","start","direction","count","parseInt","apiStart","apiEnd","useFetch","blocks","isLoading","error","console","log","push","Provider","value","coins","getAllCoins","preferredCoin","header","lowestBlock","highestBlock","firstBlock","lastBlock","wrapper","blockList","reverse","map","index","key","innerPage","createContext","Coins","displayName","blockTime","blockReward","logo","filter","Section","children","pagesection","sectionheader","Cell","maxDecimals","wrapInLink","contents","accentuatedLink","href","target","rel","style","processInnerCellStyle","processCellStyle","innerCell","sunken","sunkenData","backgroundColor","padding","borderRadius","width","marginRight","marginLeft","textColor","color","fontSize","normal","smaller","small","hasData","formattedData","formatNumericalValue","decimalClass","unitClass","cell","sunkenLabel","info","processOuterCellStyle","mono","dimmedValue","e","join","loading","src","alt","FreshGRLCBanner","title","subdomain","subtitle","subtext","banner","makeCoinsUrl","CoinSelector","coinSelector","Fragment","selectableCoin","SearchBar","useState","searchFieldValue","updateSearchField","searchObject","setSearchObject","setLoading","isError","setError","searchResults","setSearchResults","selectedObject","setSelectedObject","redirectUrl","redirectTo","useEffect","Promise","all","a","fetch","json","then","results","result","network","filtered","hasOwnProperty","transaction","txid","address","Form","searchbar","onSubmit","trim","Input","placeholder","onChange","Banner","selectableCoins","rounded","number","negative","absolute","Math","abs","valueOf","integer","floor","decimalpart","roundTo","toString","roundedDecimals","toFixed","substring","replace","options","roundedData","isExactlyOne","formatDecimal","Number","PageLoadAnimation","pageLoad","inner","padNumber","num","padStart","alwaysIncludeDate","includeDate","Date","now","date","zone","toLocaleTimeString","timeZoneName","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","formatTimeDiff","timestamp1","timestamp2","useSeconds","timeDiff","round","formatTimeDiffToString","unformatted"],"mappings":"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","file":"static/js/9.c9b31f46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blocksummary\":\"BlockSummary_blocksummary__1ixbk\",\"spacer\":\"BlockSummary_spacer__2MO6n\",\"highlighted\":\"BlockSummary_highlighted__2Sv_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"BlockListNavigation_navigation__Nvrzq\",\"separator\":\"BlockListNavigation_separator__5nQuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"BlocksListView_wrapper__15tdV\",\"blockList\":\"BlocksListView_blockList__r3-PM\"};","import React, { useContext } from 'react';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IBlock } from 'interfaces/IBlock.interface';\n\nimport { Cell } from 'components/Cell/Cell.component';\n\nimport { formatTime } from 'utils/formatTime.util';\n\nimport classes from './BlockSummary.module.scss';\n\ninterface IProps {\n    block: IBlock;\n    first?: boolean;\n    highlighted?: boolean;\n}\n\nexport const BlockSummary: React.FC<IProps> = ({ block, first, highlighted }) => {\n    const coinInfo = useContext(CoinInfoContext);\n\n    /* FIXME: Deduplicate and move this logic somewhere else */\n    var isAddressMiner: boolean;\n    var minerName: string;\n    var minerLink: string | null;\n    var minerLinkExternal: boolean = false;\n\n    if (block.miner !== null) {\n        isAddressMiner = block.miner.name.indexOf(' (') !== -1;\n        minerName = !isAddressMiner ? block.miner.name : '(' + block.miner.name.split(' (')[1];\n        minerLink = !isAddressMiner ? block.miner.website : `/${coinInfo.ticker}/address/${block.miner.name.split(' (')[0]}`;\n        minerLinkExternal = !isAddressMiner;\n    } else {\n        minerName = '(Unknown pool)';\n        minerLink = null;\n    }\n\n    return (\n        <div className={classes.blocksummary + (highlighted ? ' ' + classes.highlighted : '')}>\n            <Cell\n                label={first ? 'Time' : undefined}\n                largelabel={true}\n                data={formatTime(block.firstseen ? block.firstseen : block.timestamp, true)}\n                cellStyle={{\n                    size: '250px'\n                }}\n            />\n            <Cell\n                label={first ? 'Height' : undefined}\n                largelabel={true}\n                data={block.height}\n                link={`/${coinInfo.ticker}/blocks/${block.hash}`}\n                cellStyle={{\n                    size: '80px',\n                    linkColor: 'normal'\n                }}\n            />\n            <Cell\n                label={first ? 'Blockhash' : undefined}\n                largelabel={true}\n                data={block.hash}\n                link={`/${coinInfo.ticker}/blocks/${block.hash}`}\n                cellStyle={{\n                    size: '550px',\n                    linkColor: 'normal'\n                }}\n            />\n            <Cell\n                label={first ? 'Transactions' : undefined}\n                largelabel={true}\n                data={block.transactions.length}\n                cellStyle={{\n                    size: '100px',\n                    dataNotImportant: block.transactions.length === 1\n                }}\n            />\n            <Cell\n                label={first ? 'Transacted' : undefined}\n                largelabel={true}\n                data={block.totaltransacted}\n                unit={coinInfo.displaySymbol}\n                alwaysSingular={true}\n                decimals={8}\n                cellStyle={{\n                    size: '140px',\n                    align: 'right',\n                    dataNotImportant: block.totaltransacted === 0.0\n                }}\n            />\n            <Cell\n                label={first ? 'Block size' : undefined}\n                largelabel={true}\n                data={block.size}\n                unit=\"byte\"\n                cellStyle={{\n                    size: '100px',\n                    align: 'right'\n                }}\n            />\n            <div className={classes.spacer}></div>\n            <Cell\n                label={first ? 'Mined by' : undefined}\n                largelabel={true}\n                data={minerName}\n                notMono={true}\n                link={minerLink}\n                externalLink={minerLinkExternal}\n                cellStyle={{\n                    size: '160px',\n                    align: 'left',\n                    linkColor: minerLinkExternal ? 'accentuate' : 'normal'\n                }}\n            />\n        </div>\n    );\n};\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport classes from './BlockListNavigation.module.scss';\n\ninterface IProps {\n    reverseDirection: boolean;\n    blocksPerPage: number;\n    currentHighest: number | undefined;\n    currentLowest: number;\n}\n\nexport const BlockListNavigation: React.FC<IProps> = ({ reverseDirection, blocksPerPage, currentHighest, currentLowest }) => {\n    const coinInfo = useContext(CoinInfoContext);\n\n    const makeLink = (backwards: boolean): string | undefined => {\n        if (reverseDirection) {\n            backwards = !backwards;\n        }\n        if (backwards) {\n            if (currentLowest === 1) {\n                return undefined;\n            }\n            if (currentLowest < blocksPerPage) {\n                currentLowest = blocksPerPage + 1;\n                currentHighest = blocksPerPage * 2;\n            }\n        }\n        if (!backwards && (currentHighest === undefined || currentHighest < currentLowest + blocksPerPage - 1)) {\n            return undefined;\n        }\n        const newStart = (reverseDirection ? (currentHighest ? currentHighest : currentLowest + blocksPerPage) : currentLowest) + (backwards ? -blocksPerPage : blocksPerPage);\n        return `/${coinInfo.ticker}/blocks/?start=${newStart}&direction=${reverseDirection?'desc':'asc'}&count=${blocksPerPage}`;\n    };\n\n    const linkBackward = makeLink(true);\n    const linkForward = makeLink(false);\n    const labelBackward = reverseDirection ? '⇽ Newer' : '⇽ Older';\n    const labelForward = reverseDirection ? 'Older ⇾' : 'Newer ⇾';\n\n    return (\n        <div className={classes.navigation}>\n            {linkBackward ? (\n                <Link to={linkBackward} className={classes.backwards}>{labelBackward}</Link>\n            ) : labelBackward}\n            <div className={classes.separator}>·</div>\n            {linkForward ? (\n                <Link to={linkForward}>{labelForward}</Link>\n            ) : labelForward}\n        </div>\n    );\n};\n","import React from 'react';\nimport useFetch from 'react-fetch-hook';\n\nimport { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\nimport { getCoinInfo, getAllCoins } from 'utils/getCoinInfo.util';\nimport { Redirect } from 'react-router';\n\nimport { CoinInfoContext } from 'context/CoinInfo.context';\n\nimport { IBlock } from 'interfaces/IBlock.interface';\n\nimport { Banner } from 'components/Banner/Banner.component';\nimport { Section } from 'components/Section/Section.component';\nimport { PageLoadAnimation } from 'components/PageLoadAnimation/PageLoadAnimation.component';\nimport { BlockSummary } from './BlockSummary/BlockSummary.component';\nimport { BlockListNavigation } from './BlockListNavigation/BlockListNavigation.component';\n\nimport classes from './BlocksListView.module.scss';\n\ninterface IProps {\n    routeParams: {\n        coin: CoinTickerSymbol;\n        hash: string;\n        location: any;\n    };\n    queryParams: {\n        start?: string | number;\n        count?: string | number;\n        direction?: 'asc' | 'desc';\n    };\n}\n\nexport const BlocksListView: React.FC<IProps> = ({ routeParams, queryParams }) => {\n    const baseUrl = getBaseUrl(routeParams.coin);\n    const coinInfo = getCoinInfo(routeParams.coin);\n\n    if (!queryParams || !queryParams.start) {\n        queryParams = {};\n        queryParams.start = 1;\n        queryParams.direction = 'asc';\n    } else if (!queryParams.direction) {\n        queryParams.direction = 'desc';\n    }\n    if (!queryParams.count) {\n        queryParams.count = 40;\n    }\n\n    queryParams.start = parseInt(queryParams.start as string);\n    queryParams.count = parseInt(queryParams.count as string);\n\n    const reverseDirection = queryParams.direction === 'desc';\n\n    var apiStart = !reverseDirection ? queryParams.start : queryParams.start - queryParams.count + 1;\n    if (apiStart < 1) {\n        apiStart = 1;\n    }\n    const apiEnd = apiStart + queryParams.count - 1;\n\n    const { data: blocks, isLoading, error } = useFetch<IBlock[]>(\n        `${baseUrl}/blocks/?start=${apiStart}&limit=${queryParams.count}&expand=transactions,miner`\n    );\n\n    if (error != null) {\n        console.log(error);\n        return <Redirect to=\"/error404\" push={false} />;\n    }\n\n    const innerPage = (blocks: IBlock[]) => {\n        const lowestBlock = blocks.length > 0 ? blocks[0].height : apiStart;\n        const highestBlock = blocks.length > 0 ? blocks[blocks.length-1].height : undefined;\n        const firstBlock = !reverseDirection ? lowestBlock : highestBlock;\n        const lastBlock = reverseDirection ? lowestBlock : highestBlock;\n        return (\n            <>\n                {firstBlock && lastBlock ? (\n                    <p>Showing blocks {firstBlock} to {lastBlock}</p>\n                ) : undefined}\n                <BlockListNavigation\n                    blocksPerPage={queryParams.count as number}\n                    reverseDirection={reverseDirection}\n                    currentLowest={lowestBlock}\n                    currentHighest={highestBlock}\n                />\n                <div className={classes.wrapper}>\n                    <div className={classes.blockList}>\n                        {blocks.length > 0 ? (\n                            (queryParams.direction === 'asc' ? blocks : blocks.reverse()).map((block: IBlock, index: number) => (\n                                <BlockSummary key={index} block={block} first={index === 0} highlighted={index % 2 === 1}/>\n                            ))\n                        ) : (\n                            <p>Block {apiStart} is beyond the tip of the blockchain</p>\n                        )}\n                    </div>\n                </div>\n                <BlockListNavigation\n                    blocksPerPage={queryParams.count as number}\n                    reverseDirection={reverseDirection}\n                    currentLowest={lowestBlock}\n                    currentHighest={highestBlock}\n                />\n            </>\n        );\n    };\n\n    return (\n        <CoinInfoContext.Provider value={coinInfo}>\n            <Banner coins={getAllCoins()} preferredCoin={coinInfo ? coinInfo.ticker : undefined} />\n            <Section header=\"Browse blockchain\">\n                {!isLoading && blocks != null ? innerPage(blocks) : (\n                    <>\n                        <p>Loading blocks {reverseDirection ? apiEnd : apiStart} to {reverseDirection ? apiStart : apiEnd}</p>\n                        <PageLoadAnimation />\n                    </>\n                )}\n            </Section>\n        </CoinInfoContext.Provider>\n    );\n};\n","import { createContext } from 'react';\n\nimport { ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nexport const CoinInfoContext = createContext<ICoinInfo>(null!);\n","import { CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nexport const getBaseUrl = (ticker: CoinTickerSymbol) => `https://api.freshgrlc.net/blockchain/${ticker}`;\n","import { CoinTickerSymbol, ICoinInfo } from 'interfaces/ICoinInfo.interface';\n\nconst Coins: ICoinInfo[] = [\n    {\n        ticker: 'grlc',\n        name: 'garlicoin',\n        displayName: 'Garlicoin',\n        displaySymbol: 'GRLC',\n        blockTime: 40,\n        blockReward: 25,\n        logo: 'garlicoin.svg',\n    },\n    {\n        ticker: 'tux',\n        name: 'tuxcoin',\n        displayName: 'Tuxcoin',\n        displaySymbol: 'TUX',\n        blockTime: 60,\n        blockReward: 33.5,\n        logo: 'tuxcoin.svg',\n    },\n    {\n        ticker: 'tgrlc',\n        name: 'garlicoin-testnet',\n        displayName: 'Garlicoin testnet',\n        displaySymbol: 'tGRLC',\n        blockTime: 40,\n        blockReward: 50,\n        logo: 'garlicoin.svg',\n    },\n];\n\nexport const getCoinInfo = (ticker: CoinTickerSymbol): ICoinInfo => {\n    return Coins.filter((coin) => coin.ticker === ticker)[0];\n};\n\nexport const getAllCoins = () => Coins;\n","import React from 'react';\n\nimport classes from './Section.module.scss';\n\ninterface IProps {\n    children?: any;\n    header?: string;\n}\n\nexport const Section: React.FC<IProps> = ({ children, header }) => {\n    return (\n        <div className={classes.pagesection}>\n            {header ? <h2 className={classes.sectionheader}>{header}</h2> : null}\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesection\":\"Section_pagesection__NIoLc\",\"sectionheader\":\"Section_sectionheader__1msZN\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport loading from 'assets/loading.gif';\n\nimport { ICell, ICellStyle } from 'interfaces/ICell.interface';\n\nimport { formatNumericalValue } from 'utils/formatNumericalValue.util';\n\nimport classes from './Cell.module.scss';\n\nexport const Cell: React.FC<ICell> = ({\n    label,\n    largelabel,\n    data,\n    link,\n    externalLink,\n    unit,\n    notMono,\n    decimals,\n    maxDecimals,\n    alwaysSingular,\n    cellStyle,\n}) => {\n    const wrapInLink = (contents: JSX.Element, cellStyle?: ICellStyle) => {\n        let className = classes.link + (cellStyle && cellStyle.linkColor !== 'normal' ? ' ' + classes.accentuatedLink : '');\n        return link ? (\n            externalLink ? (\n                <a\n                    className={className}\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={processInnerCellStyle(cellStyle)}\n                >\n                    {contents}\n                </a>\n            ) : (\n                <Link className={className} to={link} style={processInnerCellStyle(cellStyle)}>\n                    {contents}\n                </Link>\n            )\n        ) : (\n            <div style={processInnerCellStyle(cellStyle)}>{contents}</div>\n        );\n    };\n\n    const processCellStyle = (innerCell: boolean, cellStyle?: ICellStyle): React.CSSProperties | undefined => {\n        var style: React.CSSProperties = {};\n\n        if (!cellStyle) {\n            return undefined;\n        }\n\n        if (cellStyle.sunken || cellStyle.sunkenData) {\n            if (innerCell) {\n                style.backgroundColor = '#34322e';\n                style.padding = '4px';\n                style.borderRadius = '10px';\n                style.width = '90%';\n            } else {\n                style.height = '28px';\n            }\n        }\n\n        if (innerCell && cellStyle.align) {\n            if (cellStyle.align === 'left') {\n                style.marginRight = 'auto';\n            } else if (cellStyle.align === 'right') {\n                style.marginLeft = 'auto';\n            }\n        }\n\n        if (innerCell && cellStyle.textColor) {\n            style.color = cellStyle.textColor;\n        }\n\n        if (!innerCell && cellStyle.size) {\n            style.width = cellStyle.size;\n        }\n\n        if (!innerCell && cellStyle.fontSize) {\n            style.fontSize = {\n                normal: undefined,\n                smaller: '90%',\n                small: '85%',\n            }[cellStyle.fontSize];\n        }\n\n        return style;\n    };\n\n    const processOuterCellStyle = (cellStyle?: ICellStyle): React.CSSProperties | undefined =>\n        processCellStyle(false, cellStyle);\n    const processInnerCellStyle = (cellStyle?: ICellStyle): React.CSSProperties | undefined =>\n        processCellStyle(true, cellStyle);\n\n    const hasData = data !== null && data !== undefined;\n    const formattedData = hasData\n        ? formatNumericalValue(data as (string | number), {\n              decimals,\n              maxDecimals,\n              unit,\n              alwaysSingular,\n              decimalClass: classes.decimals,\n              unitClass: classes.unit\n          })\n        : undefined;\n\n    return (\n        <div className={`${classes.cell} ${cellStyle && cellStyle.color ? classes[cellStyle.color + 'Cell'] : ''}`}>\n            {label ? <h4 className={classes.label + (largelabel ? ' ' + classes.largelabel : '') + (cellStyle && cellStyle.sunken ? ' ' + classes.sunkenLabel : '')}>{label}</h4> : null}\n            <div className={classes.info} style={processOuterCellStyle(cellStyle)}>\n                {hasData ? (\n                    wrapInLink(<div\n                        className={[\n                            notMono ? undefined : classes.mono,\n                            cellStyle && cellStyle.dataNotImportant ? classes.dimmedValue : undefined\n                        ].filter(e => e !== undefined).join(' ')}\n                    >{formattedData}</div>, cellStyle)\n                ) : (\n                    wrapInLink(<img className={classes.loading} src={loading} alt=\"Loading\" />, cellStyle)\n                )}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"FreshGRLCBanner_banner__GV84b\",\"subdomain\":\"FreshGRLCBanner_subdomain__PJy6_\",\"subtext\":\"FreshGRLCBanner_subtext___Qo5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coinSelector\":\"CoinSelector_coinSelector__2igoQ\",\"separator\":\"CoinSelector_separator__3R6Lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__SqBc-\"};","import React from 'react';\n\nimport classes from './FreshGRLCBanner.module.scss';\n\n\ninterface IProps {\n    title?: string,\n    subdomain?: string,\n    subtitle?: string,\n    subtext?: string | JSX.Element\n}\n\nexport const FreshGRLCBanner: React.FC<IProps> = function({ title, subdomain, subtitle, subtext }) {\n    title = title ? title : 'FreshGRLC.NET';\n    return (\n        <div className={classes.banner}>\n            <h1>{ subdomain ? (<span className={classes.subdomain}>{subdomain}.</span>) : ''}{title}</h1>\n            { subtitle ? (<h2>{subtitle}</h2>) : undefined}\n            { subtext ? (<div className={classes.subtext}>{subtext}</div>) : undefined}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport classes from './CoinSelector.module.scss';\n\ninterface ICombinedCoins {\n    name: string;\n    coins: CoinTickerSymbol[];\n};\n\nexport type SingleOrCombinedCoin = ICoinInfo | ICombinedCoins;\n\ninterface IProps {\n    coins: SingleOrCombinedCoin[];\n}\n\nconst makeCoinsUrl = (coin: ICoinInfo | ICombinedCoins): string => {\n    const combinedCoins = coin as ICombinedCoins;\n    if (combinedCoins !== undefined && combinedCoins.coins !== undefined) {\n        const combinedCoins = coin as ICombinedCoins;\n        return combinedCoins.coins.join('+');\n    }\n    return (coin as ICoinInfo).ticker;\n};\n\nexport const CoinSelector: React.FC<IProps> = function({ coins }) {\n    return (\n        <div className={classes.coinSelector}>\n            Show information for:\n            {\n                coins.map((coin, index) => (\n                    <React.Fragment key={index}>\n                        {index ? (<span className={classes.separator}>{'\\u25CF'}</span>) : ''}\n                        <a className={classes.selectableCoin} href={`/${makeCoinsUrl(coin)}/home/`}>{coin.name}</a>\n                    </React.Fragment>\n                ))\n            }\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form } from 'semantic-ui-react';\n\nimport { IAddressInfo } from 'interfaces/IAddressInfo.interface';\nimport { IBlock } from 'interfaces/IBlock.interface';\nimport { IBlockTransaction } from 'interfaces/ITransaction.interface';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { getBaseUrl } from 'utils/getBaseUrl.util';\n\nimport classes from './SearchBar.module.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\ntype ISearchResult = IBlock | IBlockTransaction | IAddressInfo | null;\n\ninterface ISearchResultWithContext {\n    result: ISearchResult;\n    network: CoinTickerSymbol;\n}\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const SearchBar: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const [searchFieldValue, updateSearchField] = useState<string>('');\n    const [searchObject, setSearchObject] = useState<string>('');\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [isError, setError] = useState<boolean>(false);\n    const [searchResults, setSearchResults] = useState<ISearchResultWithContext[] | undefined>(undefined);\n    const [selectedObject, setSelectedObject] = useState<ISearchResultWithContext | undefined>(undefined);\n    const [redirectUrl, redirectTo] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        setError(false);\n    }, [searchFieldValue]);\n\n    useEffect(() => {\n        if (searchObject === '') {\n            setLoading(false);\n            return;\n        }\n\n        setLoading(true);\n        Promise.all(\n            coins.map(\n                async (coin) =>\n                    (await fetch(`${getBaseUrl(coin.ticker)}/search/${searchObject}`)).json() as Promise<ISearchResult>\n            )\n        )\n            .then((results) =>\n                results\n                    .map((result, index) => {\n                        return {\n                            result: result,\n                            network: coins[index].ticker,\n                        };\n                    })\n                    .filter((result) => result.result !== null)\n            )\n            .then(setSearchResults);\n    }, [coins, searchObject]);\n\n    useEffect(() => {\n        setLoading(false);\n        if (searchResults === undefined) return;\n\n        if (searchResults.length === 0) {\n            setError(true);\n            return;\n        }\n\n        if (searchResults.length > 1 && preferredCoin !== undefined) {\n            const filtered = searchResults.filter((result) => result.network === preferredCoin);\n            if (filtered.length > 0) {\n                setSelectedObject(filtered[0]);\n                return;\n            }\n        }\n\n        setSelectedObject(searchResults[0]);\n    }, [searchResults, preferredCoin]);\n\n    useEffect(() => {\n        if (selectedObject === undefined || selectedObject.result === null) return;\n\n        if (selectedObject.result.hasOwnProperty('txid')) {\n            const transaction = selectedObject.result as IBlockTransaction;\n            redirectTo(`/${selectedObject.network}/transactions/${transaction.txid}`);\n        } else if (selectedObject.result.hasOwnProperty('hash')) {\n            const block = selectedObject.result as IBlock;\n            redirectTo(`/${selectedObject.network}/blocks/${block.hash}`);\n        } else {\n            const address = selectedObject.result as IAddressInfo;\n            redirectTo(`/${selectedObject.network}/address/${address.address}`);\n        }\n    }, [selectedObject]);\n\n    /* FIXME */\n    return redirectUrl === undefined ? (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    ) : (\n        <Form className={classes.searchbar} onSubmit={() => setSearchObject(searchFieldValue.trim())}>\n            <Redirect push to={redirectUrl} />\n            <Form.Input\n                size=\"large\"\n                placeholder=\"Search for address, transaction or block...\"\n                loading={isLoading}\n                error={isError}\n                value={searchFieldValue}\n                onChange={(e) => updateSearchField(e.target.value)}\n            />\n        </Form>\n    );\n};\n","import React from 'react';\n\nimport { ICoinInfo, CoinTickerSymbol } from 'interfaces/ICoinInfo.interface';\n\nimport { FreshGRLCBanner } from './FreshGRLCBanner/FreshGRLCBanner.component';\nimport { CoinSelector, SingleOrCombinedCoin } from './CoinSelector/CoinSelector.component';\nimport { SearchBar } from './SearchBar/SearchBar.component';\n\nimport { getCoinInfo } from 'utils/getCoinInfo.util';\n\n\ninterface IProps {\n    coins: ICoinInfo[];\n    preferredCoin?: CoinTickerSymbol;\n}\n\nexport const Banner: React.FC<IProps> = function({ coins, preferredCoin }) {\n    const selectableCoins: SingleOrCombinedCoin[] = [\n        getCoinInfo('grlc'),\n        getCoinInfo('tux'),\n        { name: '(both)', coins: ['grlc', 'tux'] },\n        getCoinInfo('tgrlc')\n    ];\n    return (\n        <FreshGRLCBanner subdomain=\"explorer\" subtitle=\"Multi-Blockchain Explorer\" subtext={(\n            <>\n                <CoinSelector coins={selectableCoins} />\n                <SearchBar coins={coins} preferredCoin={preferredCoin} />\n            </>\n        )}/>\n    );\n};\n","import React from 'react';\n\nexport const rounded = (number: number, decimals?: number, maxDecimals: number = 8): [number | string, string | undefined] => {\n    const negative = number < 0;\n    const absolute = Math.abs(number.valueOf());\n    const integer = Math.floor(absolute);\n    const decimalpart = absolute - integer;\n    const roundTo = decimals !== undefined ? decimals : decimalpart.toString().length > 2 + maxDecimals ? maxDecimals : undefined;\n    const roundedDecimals = (\n        roundTo !== undefined ? decimalpart.toFixed(roundTo) : decimalpart.toString()\n    ).substring(2, 2 + maxDecimals);\n\n    return [\n        negative ? integer === 0 ? '-0' : -integer : integer,\n        roundedDecimals !== '' ? (\n            decimals !== undefined ? roundedDecimals : roundedDecimals.replace(/0+$/, '')\n        ) : undefined\n    ];\n};\n\nexport const formatDecimal = (integer: number | string, decimalClass?: string, roundedDecimals?: string): JSX.Element => {\n    return (\n        <>\n            {integer}\n            {roundedDecimals ? <span className={decimalClass}>.{roundedDecimals}</span> : null}\n        </>\n    );\n};\n\ninterface INumericalValueOptions {\n    decimals?: number;\n    maxDecimals?: number;\n    unit?: string;\n    alwaysSingular?: boolean;\n    decimalClass?: string;\n    unitClass?: string;\n    dimValue?: boolean;\n}\n\nexport const formatNumericalValue = (value: number | string, options: INumericalValueOptions) => {\n    const { decimals, maxDecimals, unit, alwaysSingular, decimalClass, unitClass } = options;\n\n    let roundedData: [number | string, string | undefined] | undefined;\n    let formattedData: JSX.Element | string | undefined;\n    let isExactlyOne: boolean = false;\n\n    if (typeof value === 'number') {\n        roundedData = rounded(value, decimals, maxDecimals);\n        formattedData = formatDecimal(roundedData[0], decimalClass, roundedData[1]);\n    } else {\n        roundedData = rounded(Number(value), decimals, maxDecimals);\n        formattedData = value;\n    }\n    isExactlyOne = roundedData[0] in [-1, 1];\n\n    return (\n        <>\n            {formattedData}\n            {unit ? (\n                <div className={unitClass}>\n                    {' '}\n                    {unit}\n                    {isExactlyOne || alwaysSingular ? '' : 's'}\n                </div>\n            ) : null}\n        </>\n    );\n};\n","import React from 'react';\n\nimport classes from './PageLoadAnimation.module.scss';\n\nimport loading from 'assets/loading_large.svg';\n\nexport const PageLoadAnimation: React.FC = () => {\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.pageLoad}>\n                <div className={classes.inner}>\n                    <img src={loading} alt=\"\" />\n                    <h3>Loading...</h3>\n                </div>\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageLoadAnimation_wrapper__3xAcH\",\"pageLoad\":\"PageLoadAnimation_pageLoad__3wwZ4\",\"inner\":\"PageLoadAnimation_inner__1QFe0\"};","module.exports = __webpack_public_path__ + \"static/media/loading_large.346688c2.svg\";","export const padNumber = (num: number): string => {\n    return num.toString().padStart(2, '0');\n};\n","import { padNumber } from './padNumber.util';\n\nexport const formatTime = (timestamp: number | null | undefined, alwaysIncludeDate?: boolean): string => {\n    if (timestamp === null || timestamp === undefined) {\n        return 'Unknown';\n    }\n\n    const includeDate: boolean = alwaysIncludeDate || Date.now() / 1000 - timestamp > 86400;\n    const date = new Date(timestamp * 1000);\n    const zone = new Date().toLocaleTimeString('en-us', { timeZoneName: 'short' }).split(' ')[2];\n\n    /* FIXME: Detect browsers for people that don't get how calenders work */\n    return (\n        (includeDate\n            ? `${padNumber(date.getDate())}-${padNumber(date.getMonth() + 1)}-${padNumber(date.getFullYear())} `\n            : '') +\n        `${padNumber(date.getHours())}:${padNumber(date.getMinutes())}:${padNumber(date.getSeconds())} ${zone}`\n    );\n};\n\nexport const formatTimeDiff = (timestamp1?: number, timestamp2?: number, useSeconds?: boolean): [number | string, string | undefined] => {\n    if (timestamp1 === undefined || timestamp1 === null || timestamp2 === undefined) {\n        return ['Unknown', undefined];\n    }\n\n    const timeDiff = timestamp2 - timestamp1;\n\n    if (timeDiff < 60) {\n        return useSeconds ? [timeDiff, 'second'] : ['<1', 'minute'];\n    }\n    if (timeDiff < 3600) {\n        return [Math.round(timeDiff / 60), 'minute'];\n    }\n    if (timeDiff < 86400) {\n        return [Math.round(timeDiff / 3600), 'hour'];\n    }\n    if (timeDiff < 604800) {\n        return [Math.round(timeDiff / 86400), 'day'];\n    }\n    if (timeDiff < 2592000) {\n        return [Math.round(timeDiff / 604800), 'week'];\n    }\n    if (timeDiff < 220752000) {\n        return [Math.round(timeDiff / 2592000), 'month'];\n    }\n    return [Math.round(timeDiff / 220752000), 'year'];\n};\n\nexport const formatTimeDiffToString = (timestamp1?: number, timestamp2?: number, useSeconds?: boolean): string => {\n    const unformatted = formatTimeDiff(timestamp1, timestamp2, useSeconds);\n    return unformatted[0].toString() + ' ' + unformatted[1] + (unformatted[0] !== 1 ? 's' : '');\n}\n\nexport const formatTimeSince = (timestamp?: number): [number | string, string | undefined] => {\n    return formatTimeDiff(timestamp, Date.now() / 1000);\n};\n","module.exports = __webpack_public_path__ + \"static/media/loading.e7224f88.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__2Y63x\",\"label\":\"Cell_label__3ePW_\",\"sunkenLabel\":\"Cell_sunkenLabel__3CcxM\",\"largelabel\":\"Cell_largelabel__24-9K\",\"info\":\"Cell_info__1BKSq\",\"mono\":\"Cell_mono__3WhQB\",\"dimmedValue\":\"Cell_dimmedValue__1W1mr\",\"decimals\":\"Cell_decimals__1fWGM\",\"unit\":\"Cell_unit__31Wzf\",\"loading\":\"Cell_loading__3bY5H\",\"link\":\"Cell_link__oj9kk\",\"accentuatedLink\":\"Cell_accentuatedLink__4FSBT\",\"normalCell\":\"Cell_normalCell__2ayJT\",\"lighterCell\":\"Cell_lighterCell__3JIpK\",\"lightCell\":\"Cell_lightCell__2_HD7\",\"darkerCell\":\"Cell_darkerCell__3UGjH\"};"],"sourceRoot":""}